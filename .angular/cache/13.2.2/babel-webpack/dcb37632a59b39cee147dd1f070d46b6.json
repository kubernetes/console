{"ast":null,"code":"// Copyright 2017 The Kubernetes Authors.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { HttpClient } from '@angular/common/http';\nimport { forwardRef } from '@angular/core';\nimport { AbstractControl, NG_ASYNC_VALIDATORS } from '@angular/forms';\nimport { of } from 'rxjs';\nimport { debounceTime, map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport const uniqueNameValidationKey = 'validImageReference';\n/**\n * A validator directive which checks the underlining ngModel's given name is unique or not.\n * If the name exists, error with name `uniqueName` will be added to errors.\n */\n\nexport let ValidImageReferenceValidator = /*#__PURE__*/(() => {\n  class ValidImageReferenceValidator {\n    constructor(http) {\n      this.http = http;\n    }\n\n    validate(control) {\n      if (!control.value) {\n        return of(null);\n      }\n\n      return this.http.post('api/v1/appdeployment/validate/imagereference', {\n        reference: control.value\n      }).pipe(debounceTime(500), map(res => !res.valid ? {\n        [uniqueNameValidationKey]: res.reason\n      } : null));\n    }\n\n  }\n\n  ValidImageReferenceValidator.ɵfac = function ValidImageReferenceValidator_Factory(t) {\n    return new (t || ValidImageReferenceValidator)(i0.ɵɵdirectiveInject(i1.HttpClient));\n  };\n\n  ValidImageReferenceValidator.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n    type: ValidImageReferenceValidator,\n    selectors: [[\"\", \"kdValidImageReference\", \"\"]],\n    inputs: {\n      namespace: \"namespace\"\n    },\n    features: [i0.ɵɵProvidersFeature([{\n      provide: NG_ASYNC_VALIDATORS,\n      useExisting: forwardRef(() => ValidImageReferenceValidator),\n      multi: true\n    }])]\n  });\n  return ValidImageReferenceValidator;\n})();","map":null,"metadata":{},"sourceType":"module"}