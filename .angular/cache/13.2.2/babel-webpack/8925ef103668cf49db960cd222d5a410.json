{"ast":null,"code":"// Copyright 2017 The Kubernetes Authors.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { HttpParams } from '@angular/common/http';\nimport { ElementRef } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { LogControl } from '@api/root.api';\nimport { LogsDownloadDialog } from '@common/dialogs/download/dialog';\nimport { GlobalSettingsService } from 'common/services/global/globalsettings';\nimport { LogService } from 'common/services/global/logs';\nimport { NotificationSeverity, NotificationsService } from 'common/services/global/notifications';\nimport { merge, of, Subject, timer } from 'rxjs';\nimport { switchMap, take, takeUntil, tap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"common/services/global/logs\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"common/services/global/globalsettings\";\nimport * as i4 from \"@angular/material/dialog\";\nimport * as i5 from \"common/services/global/notifications\";\nimport * as i6 from \"../common/components/card/component\";\nimport * as i7 from \"@angular/flex-layout/flex\";\nimport * as i8 from \"@angular/material/form-field\";\nimport * as i9 from \"@angular/material/select\";\nimport * as i10 from \"@angular/forms\";\nimport * as i11 from \"@angular/common\";\nimport * as i12 from \"@angular/material/core\";\nimport * as i13 from \"@angular/material/button\";\nimport * as i14 from \"@angular/material/tooltip\";\nimport * as i15 from \"@angular/material/icon\";\nimport * as i16 from \"@angular/material/menu\";\nimport * as i17 from \"@angular/flex-layout/extended\";\nimport * as i18 from \"../common/components/list/spinner/component\";\nimport * as i19 from \"../common/components/date/component\";\nconst _c0 = [\"logViewContainer\"];\n\nfunction LogsComponent_mat_optgroup_6_mat_option_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 27);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r8 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", item_r8);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", item_r8, \" \");\n  }\n}\n\nfunction LogsComponent_mat_optgroup_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-optgroup\", 26);\n    i0.ɵɵtemplate(1, LogsComponent_mat_optgroup_6_mat_option_1_Template, 2, 2, \"mat-option\", 7);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.logSources == null ? null : ctx_r0.logSources.containerNames);\n  }\n}\n\nfunction LogsComponent_mat_optgroup_7_mat_option_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 27);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r10 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", item_r10);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", item_r10, \" \");\n  }\n}\n\nfunction LogsComponent_mat_optgroup_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-optgroup\", 28);\n    i0.ɵɵtemplate(1, LogsComponent_mat_optgroup_7_mat_option_1_Template, 2, 2, \"mat-option\", 7);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.logSources == null ? null : ctx_r1.logSources.initContainerNames);\n  }\n}\n\nfunction LogsComponent_mat_option_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 27);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r11 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", item_r11);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", item_r11, \" \");\n  }\n}\n\nconst _c21 = function (a0, a1) {\n  return {\n    \"kd-logs-element-compact\": a0,\n    \"kd-logs-element\": a1\n  };\n};\n\nfunction LogsComponent_div_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 29);\n    i0.ɵɵelementStart(1, \"span\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r12 = ctx.$implicit;\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(2, _c21, ctx_r4.logService.getCompact(), !ctx_r4.logService.getCompact()));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r12);\n  }\n}\n\nfunction LogsComponent_div_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵi18nStart(1, 30);\n    i0.ɵɵelement(2, \"kd-date\", 31);\n    i0.ɵɵelement(3, \"kd-date\", 31);\n    i0.ɵɵi18nEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"date\", ctx_r5.podLogs == null ? null : ctx_r5.podLogs.info.fromDate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"date\", ctx_r5.podLogs == null ? null : ctx_r5.podLogs.info.toDate);\n  }\n}\n\nconst _c24 = function (a0, a1) {\n  return {\n    \"kd-logs-text-color-invert\": a0,\n    \"kd-logs-text-color\": a1\n  };\n};\n\nconst i18n = {\n  MSG_LOGS_ZEROSTATE_TEXT: 'The selected container has not logged any messages yet.',\n  MSG_LOGS_TRUNCATED_WARNING: 'The middle part of the log file cannot be loaded, because it is too big.'\n};\nexport let LogsComponent = /*#__PURE__*/(() => {\n  class LogsComponent {\n    constructor(logService, activatedRoute_, settingsService_, dialog_, notifications_, _router) {\n      this.logService = logService;\n      this.activatedRoute_ = activatedRoute_;\n      this.settingsService_ = settingsService_;\n      this.dialog_ = dialog_;\n      this.notifications_ = notifications_;\n      this._router = _router;\n      this.totalItems = 0;\n      this.itemsPerPage = 10;\n      this.refreshUnsubscribe_ = new Subject();\n      this.logsPerView = 100;\n      this.maxLogSize = 2e9;\n      this.isLoading = true;\n      this.refreshInterval = this.settingsService_.getLogsAutoRefreshTimeInterval();\n      const namespace = this.activatedRoute_.snapshot.params.resourceNamespace;\n      const resourceType = this.activatedRoute_.snapshot.params.resourceType;\n      const resourceName = this.activatedRoute_.snapshot.params.resourceName;\n      const containerName = this.activatedRoute_.snapshot.queryParams.container;\n      logService.getResource(`source/${namespace}/${resourceName}/${resourceType}`).pipe(switchMap(data => {\n        this.logSources = data;\n        this.pod = data.podNames[0]; // Pick first pod (cannot use resource name as it may\n        // not be a pod).\n\n        this.container = containerName ? containerName : data.containerNames[0]; // Pick from URL or first.\n\n        this.appendContainerParam_();\n        return this.logService.getResource(`${namespace}/${this.pod}/${this.container}`);\n      })).pipe(tap(_ => this.logService.getAutoRefresh() ? this.toggleIntervalFunction_() : undefined)).pipe(take(1)).subscribe(data => {\n        this.updateUiModel_(data);\n        this.isLoading = false;\n      });\n    }\n\n    ngOnDestroy() {\n      this._router.navigate([], {\n        queryParams: {\n          ['container']: null\n        },\n        queryParamsHandling: 'merge'\n      });\n\n      this.refreshUnsubscribe_.next();\n      this.refreshUnsubscribe_.complete();\n    }\n\n    onContainerChange() {\n      this.appendContainerParam_();\n      this.loadNewest();\n    }\n    /**\n     * Loads maxLogSize oldest lines of logs.\n     */\n\n\n    loadOldest() {\n      this.loadView_(LogControl.LoadStart, LogControl.TimestampOldest, 0, -this.maxLogSize - this.logsPerView, -this.maxLogSize, this.scrollToTop_.bind(this));\n    }\n    /**\n     * Loads maxLogSize newest lines of logs.\n     */\n\n\n    loadNewest() {\n      this.loadView_(LogControl.LoadEnd, LogControl.TimestampNewest, 0, this.maxLogSize, this.maxLogSize + this.logsPerView, this.scrollToBottom_.bind(this));\n    }\n    /**\n     * Shifts view by maxLogSize lines to the past.\n     */\n\n\n    loadOlder() {\n      this.loadView_(this.currentSelection.logFilePosition, this.currentSelection.referencePoint.timestamp, this.currentSelection.referencePoint.lineNum, this.currentSelection.offsetFrom - this.logsPerView, this.currentSelection.offsetFrom, this.scrollToBottom_.bind(this));\n    }\n    /**\n     * Shifts view by maxLogSize lines to the future.\n     */\n\n\n    loadNewer() {\n      this.loadView_(this.currentSelection.logFilePosition, this.currentSelection.referencePoint.timestamp, this.currentSelection.referencePoint.lineNum, this.currentSelection.offsetTo, this.currentSelection.offsetTo + this.logsPerView, this.scrollToTop_.bind(this));\n    }\n\n    onTextColorChange() {\n      this.logService.toggleInverted();\n    }\n\n    onFontSizeChange() {\n      this.logService.toggleCompact();\n    }\n\n    onShowTimestamp() {\n      this.logService.toggleShowTimestamp();\n      this.logsSet = this.formatAllLogs_(this.podLogs.logs);\n    }\n    /**\n     * Execute when a user changes the selected option for show previous container logs.\n     * @export\n     */\n\n\n    onPreviousChange() {\n      this.logService.togglePrevious();\n      this.loadNewest();\n    }\n    /**\n     * Toggles log auto-refresh mechanism.\n     */\n\n\n    toggleLogAutoRefresh() {\n      this.logService.toggleAutoRefresh();\n      this.toggleIntervalFunction_();\n    }\n\n    downloadLog() {\n      const dialogData = {\n        data: {\n          pod: this.pod,\n          container: this.container,\n          namespace: this.activatedRoute_.snapshot.paramMap.get('resourceNamespace')\n        }\n      };\n      this.dialog_.open(LogsDownloadDialog, dialogData);\n    }\n    /**\n     * Listens for scroll events to set log following state.\n     */\n\n\n    onLogsScroll() {\n      this.logService.setFollowing(this.isScrolledBottom_());\n    }\n    /**\n     * Updates all state parameters and sets the current log view with the data returned from the\n     * backend If logs are not available sets logs to no logs available message.\n     */\n\n\n    updateUiModel_(podLogs) {\n      this.podLogs = podLogs;\n      this.currentSelection = podLogs.selection;\n      this.logsSet = this.formatAllLogs_(podLogs.logs);\n\n      if (podLogs.info.truncated) {\n        this.notifications_.push(i18n.MSG_LOGS_TRUNCATED_WARNING, NotificationSeverity.error);\n      }\n\n      if (this.logService.getFollowing()) {\n        // Pauses very slightly for the view to refresh.\n        setTimeout(() => {\n          this.scrollToBottom_();\n        });\n      }\n    }\n\n    formatAllLogs_(logs) {\n      if (logs.length === 0) {\n        logs = [{\n          timestamp: '0',\n          content: i18n.MSG_LOGS_ZEROSTATE_TEXT\n        }];\n      }\n\n      return logs.map(line => this.formatLine_(line));\n    }\n\n    formatLine_(line) {\n      // add timestamp if needed\n      const showTimestamp = this.logService.getShowTimestamp();\n      return showTimestamp ? `${new Date(line.timestamp).toISOString()} | ${line.content}` : line.content;\n    }\n\n    appendContainerParam_() {\n      this._router.navigate([], {\n        queryParams: {\n          ['container']: this.container\n        },\n        queryParamsHandling: 'merge'\n      });\n    }\n    /**\n     * Downloads and loads slice of logs as specified by offsetFrom and offsetTo.\n     * It works just like normal slicing, but indices are referenced relatively to certain reference\n     * line.\n     * So for example if reference line has index n and we want to download first 10 elements in array\n     * we have to use\n     * from -n to -n+10.\n     */\n\n\n    loadView_(logFilePosition, referenceTimestamp, referenceLinenum, offsetFrom, offsetTo, onLoad) {\n      const namespace = this.activatedRoute_.snapshot.params.resourceNamespace;\n      const params = new HttpParams().set('logFilePosition', logFilePosition).set('referenceTimestamp', referenceTimestamp).set('referenceLineNum', `${referenceLinenum}`).set('offsetFrom', `${offsetFrom}`).set('offsetTo', `${offsetTo}`).set('previous', `${this.logService.getPrevious()}`);\n      this.logService.getResource(`${namespace}/${this.pod}/${this.container}`, params).pipe(take(1)).subscribe(podLogs => {\n        this.updateUiModel_(podLogs);\n\n        if (onLoad) {\n          onLoad();\n        }\n      });\n    }\n    /**\n     * Starts and stops interval function used to automatically refresh logs.\n     */\n\n\n    toggleIntervalFunction_() {\n      if (!this.logService.getAutoRefresh()) {\n        this.refreshUnsubscribe_.next();\n        return;\n      }\n\n      merge(this.settingsService_.onSettingsUpdate, of(true)).pipe(switchMap(_ => {\n        this.refreshInterval = this.settingsService_.getLogsAutoRefreshTimeInterval();\n        const interval = this.refreshInterval * 1000;\n        return timer(0, interval === 0 ? undefined : interval);\n      })).pipe(takeUntil(this.refreshUnsubscribe_)).subscribe(_ => this.loadView_(LogControl.LoadEnd, LogControl.TimestampNewest, 0, this.maxLogSize, this.maxLogSize + this.logsPerView));\n    }\n    /**\n     * Scrolls log view to the bottom of the page.\n     */\n\n\n    scrollToBottom_() {\n      this.scrollTo_('BOTTOM');\n    }\n    /**\n     * Scrolls log view to the top of the page.\n     */\n\n\n    scrollToTop_() {\n      this.scrollTo_('TOP');\n    }\n    /**\n     * Checks if the current logs scroll position is at the bottom.\n     */\n\n\n    isScrolledBottom_() {\n      const {\n        nativeElement\n      } = this.logViewContainer_;\n      return nativeElement.scrollHeight <= nativeElement.scrollTop + nativeElement.clientHeight;\n    }\n\n    scrollTo_(position) {\n      const {\n        nativeElement\n      } = this.logViewContainer_;\n\n      if (!nativeElement) {\n        return;\n      }\n\n      let top;\n\n      switch (position) {\n        case 'TOP':\n          top = 0;\n          break;\n\n        case 'BOTTOM':\n          top = nativeElement.scrollHeight;\n          break;\n\n        default:\n          return;\n      }\n\n      nativeElement.scrollTo({\n        top,\n        left: 0,\n        behavior: 'smooth'\n      });\n    }\n\n  }\n\n  LogsComponent.ɵfac = function LogsComponent_Factory(t) {\n    return new (t || LogsComponent)(i0.ɵɵdirectiveInject(i1.LogService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.GlobalSettingsService), i0.ɵɵdirectiveInject(i4.MatDialog), i0.ɵɵdirectiveInject(i5.NotificationsService), i0.ɵɵdirectiveInject(i2.Router));\n  };\n\n  LogsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LogsComponent,\n    selectors: [[\"kd-logs\"]],\n    viewQuery: function LogsComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 7);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.logViewContainer_ = _t.first);\n      }\n    },\n    decls: 68,\n    vars: 20,\n    consts: function () {\n      let i18n_1;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        const MSG_EXTERNAL_1021548113296205274$$SRC_APP_FRONTEND_LOGS_COMPONENT_TS_2 = goog.getMsg(\"Logs from\");\n        i18n_1 = MSG_EXTERNAL_1021548113296205274$$SRC_APP_FRONTEND_LOGS_COMPONENT_TS_2;\n      } else {\n        i18n_1 = $localize`Logs from`;\n      }\n\n      let i18n_3;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        const MSG_EXTERNAL_6869304038391725752$$SRC_APP_FRONTEND_LOGS_COMPONENT_TS_4 = goog.getMsg(\"Containers\");\n        i18n_3 = MSG_EXTERNAL_6869304038391725752$$SRC_APP_FRONTEND_LOGS_COMPONENT_TS_4;\n      } else {\n        i18n_3 = $localize`Containers`;\n      }\n\n      let i18n_5;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        const MSG_EXTERNAL_7281870845577621674$$SRC_APP_FRONTEND_LOGS_COMPONENT_TS_6 = goog.getMsg(\"Init Containers\");\n        i18n_5 = MSG_EXTERNAL_7281870845577621674$$SRC_APP_FRONTEND_LOGS_COMPONENT_TS_6;\n      } else {\n        i18n_5 = $localize`Init Containers`;\n      }\n\n      let i18n_7;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        const MSG_EXTERNAL_7136018875175606726$$SRC_APP_FRONTEND_LOGS_COMPONENT_TS_8 = goog.getMsg(\"in\");\n        i18n_7 = MSG_EXTERNAL_7136018875175606726$$SRC_APP_FRONTEND_LOGS_COMPONENT_TS_8;\n      } else {\n        i18n_7 = $localize`in`;\n      }\n\n      let i18n_9;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        const MSG_EXTERNAL_8601511221316154701$$SRC_APP_FRONTEND_LOGS_COMPONENT_TS_10 = goog.getMsg(\"Download logs\");\n        i18n_9 = MSG_EXTERNAL_8601511221316154701$$SRC_APP_FRONTEND_LOGS_COMPONENT_TS_10;\n      } else {\n        i18n_9 = $localize`Download logs`;\n      }\n\n      let i18n_11;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        const MSG_EXTERNAL_5519023941949331063$$SRC_APP_FRONTEND_LOGS_COMPONENT_TS_12 = goog.getMsg(\"Invert colors\");\n        i18n_11 = MSG_EXTERNAL_5519023941949331063$$SRC_APP_FRONTEND_LOGS_COMPONENT_TS_12;\n      } else {\n        i18n_11 = $localize`Invert colors`;\n      }\n\n      let i18n_13;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        const MSG_EXTERNAL_8926664967847390286$$SRC_APP_FRONTEND_LOGS_COMPONENT_TS_14 = goog.getMsg(\"Reduce font size\");\n        i18n_13 = MSG_EXTERNAL_8926664967847390286$$SRC_APP_FRONTEND_LOGS_COMPONENT_TS_14;\n      } else {\n        i18n_13 = $localize`Reduce font size`;\n      }\n\n      let i18n_15;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        const MSG_EXTERNAL_6046016632304545069$$SRC_APP_FRONTEND_LOGS_COMPONENT_TS_16 = goog.getMsg(\"Show timestamps\");\n        i18n_15 = MSG_EXTERNAL_6046016632304545069$$SRC_APP_FRONTEND_LOGS_COMPONENT_TS_16;\n      } else {\n        i18n_15 = $localize`Show timestamps`;\n      }\n\n      let i18n_17;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        const MSG_EXTERNAL_5926957922929344102$$SRC_APP_FRONTEND_LOGS_COMPONENT_TS_18 = goog.getMsg(\"Auto-refresh (every {$interpolation} s.)\", {\n          \"interpolation\": \"\\uFFFD0\\uFFFD\"\n        });\n        i18n_17 = MSG_EXTERNAL_5926957922929344102$$SRC_APP_FRONTEND_LOGS_COMPONENT_TS_18;\n      } else {\n        i18n_17 = $localize`Auto-refresh (every ${\"\\uFFFD0\\uFFFD\"}:INTERPOLATION: s.)`;\n      }\n\n      let i18n_19;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        const MSG_EXTERNAL_8918818541808624034$$SRC_APP_FRONTEND_LOGS_COMPONENT_TS_20 = goog.getMsg(\"Show previous logs\");\n        i18n_19 = MSG_EXTERNAL_8918818541808624034$$SRC_APP_FRONTEND_LOGS_COMPONENT_TS_20;\n      } else {\n        i18n_19 = $localize`Show previous logs`;\n      }\n\n      let i18n_22;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        const MSG_EXTERNAL_1646625476171270305$$SRC_APP_FRONTEND_LOGS_COMPONENT_TS__23 = goog.getMsg(\" Logs from {$startTagKdDate}{$closeTagKdDate} to {$startTagKdDate_1}{$closeTagKdDate} UTC \", {\n          \"startTagKdDate\": \"\\uFFFD#2\\uFFFD\",\n          \"closeTagKdDate\": \"[\\uFFFD/#2\\uFFFD|\\uFFFD/#3\\uFFFD]\",\n          \"startTagKdDate_1\": \"\\uFFFD#3\\uFFFD\"\n        });\n        i18n_22 = MSG_EXTERNAL_1646625476171270305$$SRC_APP_FRONTEND_LOGS_COMPONENT_TS__23;\n      } else {\n        i18n_22 = $localize` Logs from ${\"\\uFFFD#2\\uFFFD\"}:START_TAG_KD_DATE:${\"[\\uFFFD/#2\\uFFFD|\\uFFFD/#3\\uFFFD]\"}:CLOSE_TAG_KD_DATE: to ${\"\\uFFFD#3\\uFFFD\"}:START_TAG_KD_DATE_1:${\"[\\uFFFD/#2\\uFFFD|\\uFFFD/#3\\uFFFD]\"}:CLOSE_TAG_KD_DATE: UTC `;\n      }\n\n      i18n_22 = i0.ɵɵi18nPostprocess(i18n_22);\n      return [[\"role\", \"inner-content\", 3, \"expandable\"], [\"title\", \"\", \"fxLayout\", \"row\", \"fxLayoutAlign\", \"start center\", \"fxLayoutGap\", \"8px\", \"fxFlex\", \"100\"], i18n_1, [3, \"ngModel\", \"ngModelChange\", \"selectionChange\"], [\"label\", i18n_3, 4, \"ngIf\"], [\"label\", i18n_5, 4, \"ngIf\"], i18n_7, [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"fxFlex\", \"\"], [\"fxFlexAlign\", \"center end\", \"mat-icon-button\", \"\", \"matTooltip\", i18n_9, 3, \"click\"], [\"fxLayoutAlign\", \"center end\", \"mat-icon-button\", \"\", 3, \"matMenuTriggerFor\"], [\"content\", \"\", 1, \"kd-log-line-container\", 3, \"ngClass\", \"scroll\"], [\"logViewContainer\", \"\"], [\"kdLoadingSpinner\", \"\", 3, \"isLoading\"], [\"fxFlex\", \"\", \"fxLayout\", \"column\", \"fxLayoutGap\", \"2px\"], [3, \"ngClass\", 4, \"ngFor\", \"ngForOf\"], [\"footer\", \"\", \"fxFlex\", \"\", \"fxLayoutAlign\", \"start center\", \"fxLayout\", \"row\", 1, \"footer\"], [4, \"ngIf\"], [\"mat-icon-button\", \"\", 3, \"click\"], [\"kdMenu\", \"matMenu\"], [\"mat-menu-item\", \"\", 3, \"click\"], i18n_11, i18n_13, i18n_15, i18n_17, i18n_19, [\"label\", i18n_3], [3, \"value\"], [\"label\", i18n_5], [3, \"ngClass\"], i18n_22, [\"format\", \"short\", 3, \"date\"]];\n    },\n    template: function LogsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"kd-card\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"span\");\n        i0.ɵɵi18n(3, 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"mat-form-field\");\n        i0.ɵɵelementStart(5, \"mat-select\", 3);\n        i0.ɵɵlistener(\"ngModelChange\", function LogsComponent_Template_mat_select_ngModelChange_5_listener($event) {\n          return ctx.container = $event;\n        })(\"selectionChange\", function LogsComponent_Template_mat_select_selectionChange_5_listener() {\n          return ctx.onContainerChange();\n        });\n        i0.ɵɵtemplate(6, LogsComponent_mat_optgroup_6_Template, 2, 1, \"mat-optgroup\", 4);\n        i0.ɵɵtemplate(7, LogsComponent_mat_optgroup_7_Template, 2, 1, \"mat-optgroup\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"span\");\n        i0.ɵɵi18n(9, 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"mat-form-field\");\n        i0.ɵɵelementStart(11, \"mat-select\", 3);\n        i0.ɵɵlistener(\"ngModelChange\", function LogsComponent_Template_mat_select_ngModelChange_11_listener($event) {\n          return ctx.pod = $event;\n        })(\"selectionChange\", function LogsComponent_Template_mat_select_selectionChange_11_listener() {\n          return ctx.loadNewest();\n        });\n        i0.ɵɵtemplate(12, LogsComponent_mat_option_12_Template, 2, 2, \"mat-option\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(13, \"div\", 8);\n        i0.ɵɵelementStart(14, \"button\", 9);\n        i0.ɵɵlistener(\"click\", function LogsComponent_Template_button_click_14_listener() {\n          return ctx.downloadLog();\n        });\n        i0.ɵɵelementStart(15, \"mat-icon\");\n        i0.ɵɵtext(16, \"file_download\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"button\", 10);\n        i0.ɵɵelementStart(18, \"mat-icon\");\n        i0.ɵɵtext(19, \"more_vert\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"div\", 11, 12);\n        i0.ɵɵlistener(\"scroll\", function LogsComponent_Template_div_scroll_20_listener() {\n          return ctx.onLogsScroll();\n        });\n        i0.ɵɵelement(22, \"div\", 13);\n        i0.ɵɵelementStart(23, \"div\", 14);\n        i0.ɵɵtemplate(24, LogsComponent_div_24_Template, 3, 5, \"div\", 15);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"div\", 16);\n        i0.ɵɵtemplate(26, LogsComponent_div_26_Template, 4, 2, \"div\", 17);\n        i0.ɵɵelement(27, \"div\", 8);\n        i0.ɵɵelementStart(28, \"div\");\n        i0.ɵɵelementStart(29, \"button\", 18);\n        i0.ɵɵlistener(\"click\", function LogsComponent_Template_button_click_29_listener() {\n          return ctx.loadOldest();\n        });\n        i0.ɵɵelementStart(30, \"mat-icon\");\n        i0.ɵɵtext(31, \"first_page\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(32, \"button\", 18);\n        i0.ɵɵlistener(\"click\", function LogsComponent_Template_button_click_32_listener() {\n          return ctx.loadOlder();\n        });\n        i0.ɵɵelementStart(33, \"mat-icon\");\n        i0.ɵɵtext(34, \"chevron_left\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(35, \"button\", 18);\n        i0.ɵɵlistener(\"click\", function LogsComponent_Template_button_click_35_listener() {\n          return ctx.loadNewer();\n        });\n        i0.ɵɵelementStart(36, \"mat-icon\");\n        i0.ɵɵtext(37, \"chevron_right\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(38, \"button\", 18);\n        i0.ɵɵlistener(\"click\", function LogsComponent_Template_button_click_38_listener() {\n          return ctx.loadNewest();\n        });\n        i0.ɵɵelementStart(39, \"mat-icon\");\n        i0.ɵɵtext(40, \"last_page\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(41, \"mat-menu\", null, 19);\n        i0.ɵɵelementStart(43, \"button\", 20);\n        i0.ɵɵlistener(\"click\", function LogsComponent_Template_button_click_43_listener() {\n          return ctx.onTextColorChange();\n        });\n        i0.ɵɵelementStart(44, \"mat-icon\");\n        i0.ɵɵtext(45);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(46, \"span\");\n        i0.ɵɵi18n(47, 21);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(48, \"button\", 20);\n        i0.ɵɵlistener(\"click\", function LogsComponent_Template_button_click_48_listener() {\n          return ctx.onFontSizeChange();\n        });\n        i0.ɵɵelementStart(49, \"mat-icon\");\n        i0.ɵɵtext(50);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(51, \"span\");\n        i0.ɵɵi18n(52, 22);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(53, \"button\", 20);\n        i0.ɵɵlistener(\"click\", function LogsComponent_Template_button_click_53_listener() {\n          return ctx.onShowTimestamp();\n        });\n        i0.ɵɵelementStart(54, \"mat-icon\");\n        i0.ɵɵtext(55);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(56, \"span\");\n        i0.ɵɵi18n(57, 23);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(58, \"button\", 20);\n        i0.ɵɵlistener(\"click\", function LogsComponent_Template_button_click_58_listener() {\n          return ctx.toggleLogAutoRefresh();\n        });\n        i0.ɵɵelementStart(59, \"mat-icon\");\n        i0.ɵɵtext(60);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(61, \"span\");\n        i0.ɵɵi18n(62, 24);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(63, \"button\", 20);\n        i0.ɵɵlistener(\"click\", function LogsComponent_Template_button_click_63_listener() {\n          return ctx.onPreviousChange();\n        });\n        i0.ɵɵelementStart(64, \"mat-icon\");\n        i0.ɵɵtext(65);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(66, \"span\");\n        i0.ɵɵi18n(67, 25);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        const _r6 = i0.ɵɵreference(42);\n\n        i0.ɵɵproperty(\"expandable\", false);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.container);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", (ctx.logSources == null ? null : ctx.logSources.containerNames == null ? null : ctx.logSources.containerNames.length) > 0);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", (ctx.logSources == null ? null : ctx.logSources.initContainerNames == null ? null : ctx.logSources.initContainerNames.length) > 0);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.pod);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.logSources == null ? null : ctx.logSources.podNames);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"matMenuTriggerFor\", _r6);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(17, _c24, ctx.logService == null ? null : ctx.logService.getInverted(), !(ctx.logService == null ? null : ctx.logService.getInverted())));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"isLoading\", ctx.isLoading);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.logsSet);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", (ctx.logsSet == null ? null : ctx.logsSet.length) > 1);\n        i0.ɵɵadvance(19);\n        i0.ɵɵtextInterpolate((ctx.logService == null ? null : ctx.logService.getInverted()) ? \"check_box\" : \"check_box_outline_blank\");\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate(ctx.logService.getCompact() ? \"check_box\" : \"check_box_outline_blank\");\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate(ctx.logService.getShowTimestamp() ? \"check_box\" : \"check_box_outline_blank\");\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate(ctx.logService.getAutoRefresh() ? \"check_box\" : \"check_box_outline_blank\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵi18nExp(ctx.refreshInterval);\n        i0.ɵɵi18nApply(62);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(ctx.logService.getPrevious() ? \"check_box\" : \"check_box_outline_blank\");\n      }\n    },\n    directives: [i6.CardComponent, i7.DefaultLayoutDirective, i7.DefaultLayoutAlignDirective, i7.DefaultLayoutGapDirective, i7.DefaultFlexDirective, i8.MatFormField, i9.MatSelect, i10.NgControlStatus, i10.NgModel, i11.NgIf, i12.MatOptgroup, i11.NgForOf, i12.MatOption, i13.MatButton, i7.DefaultFlexAlignDirective, i14.MatTooltip, i15.MatIcon, i16.MatMenuTrigger, i11.NgClass, i17.DefaultClassDirective, i18.LoadingSpinner, i19.DateComponent, i16.MatMenu, i16.MatMenuItem],\n    styles: [\".kd-logs-element-compact[_ngcontent-%COMP%], .kd-logs-element[_ngcontent-%COMP%]{font-family:Roboto Mono Regular,monospace;padding:0 16px;word-wrap:break-word}.kd-logs-element[_ngcontent-%COMP%]{font-size:14px}.kd-logs-element-compact[_ngcontent-%COMP%]{font-size:12px}.kd-log-line-container[_ngcontent-%COMP%]{height:100%;overflow-y:auto}.kd-log-line-container[_ngcontent-%COMP%]::-webkit-scrollbar{width:5px}kd-card[_ngcontent-%COMP%]{display:flex;max-height:100%;min-height:max(100%,550px)}.footer[_ngcontent-%COMP%]{font-size:14px;padding:0 16px}\"]\n  });\n  return LogsComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}