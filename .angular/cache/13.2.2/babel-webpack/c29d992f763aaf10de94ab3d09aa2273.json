{"ast":null,"code":"// Copyright 2017 The Kubernetes Authors.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { EventEmitter } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { AlertDialog } from 'common/dialogs/alert/dialog';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nimport * as i2 from \"@angular/flex-layout/flex\";\nimport * as i3 from \"@angular/material/form-field\";\nimport * as i4 from \"@angular/material/input\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"@angular/material/button\";\nimport * as i7 from \"@angular/material/icon\";\nexport let UploadFileComponent = /*#__PURE__*/(() => {\n  class UploadFileComponent {\n    constructor(matDialog_) {\n      this.matDialog_ = matDialog_;\n      this.onLoad = new EventEmitter();\n    }\n\n    onChange(event) {\n      if (event.target.files.length > 0) {\n        this.readFile(event.target.files[0]);\n      }\n    }\n\n    readFile(file) {\n      this.filename = file.name;\n      const reader = new FileReader();\n\n      reader.onload = event => {\n        const content = event.target.result;\n        this.onLoad.emit({\n          name: this.filename,\n          content\n        });\n      };\n\n      if (file instanceof ArrayBuffer) {\n        this.reportError('File Format Error', 'Specified file has the wrong format');\n      } else {\n        reader.readAsText(file);\n      }\n    }\n\n    reportError(title, message) {\n      const configData = {\n        title,\n        message,\n        confirmLabel: 'OK'\n      };\n      this.matDialog_.open(AlertDialog, {\n        data: configData\n      });\n    }\n\n  }\n\n  UploadFileComponent.ɵfac = function UploadFileComponent_Factory(t) {\n    return new (t || UploadFileComponent)(i0.ɵɵdirectiveInject(i1.MatDialog));\n  };\n\n  UploadFileComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: UploadFileComponent,\n    selectors: [[\"kd-upload-file\"]],\n    inputs: {\n      label: \"label\"\n    },\n    outputs: {\n      onLoad: \"onLoad\"\n    },\n    decls: 8,\n    vars: 3,\n    consts: [[\"fxLayout\", \"row\", \"fxLayoutAlign\", \"space-between start\"], [\"fxFlex\", \"\"], [\"matInput\", \"\", \"title\", \"fileInput\", 3, \"placeholder\", \"ngModel\", \"readonly\", \"click\"], [\"mat-button\", \"\", \"type\", \"button\", \"color\", \"primary\", 1, \"kd-upload-button\", 3, \"click\"], [\"hidden\", \"\", \"type\", \"file\", 3, \"change\"], [\"fileInput\", \"\"]],\n    template: function UploadFileComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r1 = i0.ɵɵgetCurrentView();\n\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"mat-form-field\", 1);\n        i0.ɵɵelementStart(2, \"input\", 2);\n        i0.ɵɵlistener(\"click\", function UploadFileComponent_Template_input_click_2_listener() {\n          i0.ɵɵrestoreView(_r1);\n\n          const _r0 = i0.ɵɵreference(7);\n\n          return _r0.click();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"button\", 3);\n        i0.ɵɵlistener(\"click\", function UploadFileComponent_Template_button_click_3_listener() {\n          i0.ɵɵrestoreView(_r1);\n\n          const _r0 = i0.ɵɵreference(7);\n\n          return _r0.click();\n        });\n        i0.ɵɵelementStart(4, \"mat-icon\");\n        i0.ɵɵtext(5, \"more_horiz\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"input\", 4, 5);\n        i0.ɵɵlistener(\"change\", function UploadFileComponent_Template_input_change_6_listener($event) {\n          return ctx.onChange($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"placeholder\", ctx.label)(\"ngModel\", ctx.filename)(\"readonly\", true);\n      }\n    },\n    directives: [i2.DefaultLayoutDirective, i2.DefaultLayoutAlignDirective, i3.MatFormField, i2.DefaultFlexDirective, i4.MatInput, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgModel, i6.MatButton, i7.MatIcon],\n    styles: [\".kd-upload-button[_ngcontent-%COMP%] {\\n  margin-left: 16px;\\n  margin-top: 4px;\\n}\"]\n  });\n  return UploadFileComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}