{"ast":null,"code":"// Copyright 2017 The Kubernetes Authors.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { HttpClient } from '@angular/common/http';\nimport { EventEmitter, forwardRef } from '@angular/core';\nimport { AbstractControl, FormArray, FormBuilder, FormControl, FormGroup, NG_ASYNC_VALIDATORS, NG_VALUE_ACCESSOR, Validators } from '@angular/forms';\nimport { filter, map, startWith, take } from 'rxjs/operators';\nimport { FormValidators } from '../validator/validators';\nimport { validateProtocol } from '../validator/validprotocol.validator';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/flex-layout/flex\";\nimport * as i4 from \"@angular/material/form-field\";\nimport * as i5 from \"@angular/material/select\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"@angular/material/core\";\nimport * as i8 from \"@angular/material/input\";\nimport * as i9 from \"../validator/validprotocol.validator\";\nimport * as i10 from \"@angular/material/progress-bar\";\nimport * as i11 from \"@angular/flex-layout/extended\";\nimport * as i12 from \"@angular/material/button\";\nimport * as i13 from \"@angular/material/icon\";\n\nfunction PortMappingsComponent_mat_option_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 7);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const serviceType_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", serviceType_r2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", serviceType_r2.label, \" \");\n  }\n}\n\nfunction PortMappingsComponent_div_7_mat_error_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵi18n(1, 19);\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction PortMappingsComponent_div_7_mat_error_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵi18n(1, 20);\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction PortMappingsComponent_div_7_mat_error_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵi18n(1, 21);\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction PortMappingsComponent_div_7_mat_error_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵi18n(1, 22);\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction PortMappingsComponent_div_7_mat_error_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵi18n(1, 23);\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction PortMappingsComponent_div_7_mat_error_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵi18n(1, 24);\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction PortMappingsComponent_div_7_mat_error_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵi18n(1, 25);\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction PortMappingsComponent_div_7_mat_error_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵi18n(1, 26);\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction PortMappingsComponent_div_7_mat_option_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 7);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const protocol_r17 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", protocol_r17);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(protocol_r17);\n  }\n}\n\nfunction PortMappingsComponent_div_7_mat_error_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵi18n(1, 27);\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction PortMappingsComponent_div_7_mat_error_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵi18n(1, 28);\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction PortMappingsComponent_div_7_button_22_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r20 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 29);\n    i0.ɵɵlistener(\"click\", function PortMappingsComponent_div_7_button_22_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r20);\n      const i_r4 = i0.ɵɵnextContext().index;\n      const ctx_r18 = i0.ɵɵnextContext();\n      return ctx_r18.remove(i_r4);\n    });\n    i0.ɵɵelementStart(1, \"mat-icon\");\n    i0.ɵɵtext(2, \"delete\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nconst _c28 = function (a0) {\n  return {\n    \"kd-deploy-form-progress-show\": a0\n  };\n};\n\nfunction PortMappingsComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r22 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵelementStart(1, \"mat-form-field\", 9);\n    i0.ɵɵelementStart(2, \"input\", 10);\n    i0.ɵɵlistener(\"change\", function PortMappingsComponent_div_7_Template_input_change_2_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r22);\n      const i_r4 = restoredCtx.index;\n      const ctx_r21 = i0.ɵɵnextContext();\n      return ctx_r21.checkPortMapping(i_r4);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, PortMappingsComponent_div_7_mat_error_3_Template, 2, 0, \"mat-error\", 11);\n    i0.ɵɵtemplate(4, PortMappingsComponent_div_7_mat_error_4_Template, 2, 0, \"mat-error\", 11);\n    i0.ɵɵtemplate(5, PortMappingsComponent_div_7_mat_error_5_Template, 2, 0, \"mat-error\", 11);\n    i0.ɵɵtemplate(6, PortMappingsComponent_div_7_mat_error_6_Template, 2, 0, \"mat-error\", 11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(7, \"p\", 12);\n    i0.ɵɵelementStart(8, \"mat-form-field\", 9);\n    i0.ɵɵelementStart(9, \"input\", 13);\n    i0.ɵɵlistener(\"change\", function PortMappingsComponent_div_7_Template_input_change_9_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r22);\n      const i_r4 = restoredCtx.index;\n      const ctx_r23 = i0.ɵɵnextContext();\n      return ctx_r23.checkPortMapping(i_r4);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(10, PortMappingsComponent_div_7_mat_error_10_Template, 2, 0, \"mat-error\", 11);\n    i0.ɵɵtemplate(11, PortMappingsComponent_div_7_mat_error_11_Template, 2, 0, \"mat-error\", 11);\n    i0.ɵɵtemplate(12, PortMappingsComponent_div_7_mat_error_12_Template, 2, 0, \"mat-error\", 11);\n    i0.ɵɵtemplate(13, PortMappingsComponent_div_7_mat_error_13_Template, 2, 0, \"mat-error\", 11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(14, \"p\", 12);\n    i0.ɵɵelementStart(15, \"mat-form-field\", 14);\n    i0.ɵɵelementStart(16, \"mat-select\", 15);\n    i0.ɵɵtemplate(17, PortMappingsComponent_div_7_mat_option_17_Template, 2, 2, \"mat-option\", 4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(18, \"mat-progress-bar\", 16);\n    i0.ɵɵtemplate(19, PortMappingsComponent_div_7_mat_error_19_Template, 2, 0, \"mat-error\", 11);\n    i0.ɵɵtemplate(20, PortMappingsComponent_div_7_mat_error_20_Template, 2, 0, \"mat-error\", 11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(21, \"div\", 17);\n    i0.ɵɵtemplate(22, PortMappingsComponent_div_7_button_22_Template, 3, 0, \"button\", 18);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const portMapping_r3 = ctx.$implicit;\n    const i_r4 = ctx.index;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formGroupName\", i_r4);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"required\", ctx_r1.isFirst(i_r4));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", portMapping_r3.get(\"port\").errors == null ? null : portMapping_r3.get(\"port\").errors.kdValidInteger);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", portMapping_r3.get(\"port\").errors == null ? null : portMapping_r3.get(\"port\").errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", portMapping_r3.get(\"port\").errors == null ? null : portMapping_r3.get(\"port\").errors.min);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", portMapping_r3.get(\"port\").errors == null ? null : portMapping_r3.get(\"port\").errors.max);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"required\", ctx_r1.isFirst(i_r4));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", portMapping_r3.get(\"targetPort\").errors == null ? null : portMapping_r3.get(\"targetPort\").errors.kdValidInteger);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", portMapping_r3.get(\"targetPort\").errors == null ? null : portMapping_r3.get(\"targetPort\").errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", portMapping_r3.get(\"targetPort\").errors == null ? null : portMapping_r3.get(\"targetPort\").errors.min);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", portMapping_r3.get(\"targetPort\").errors == null ? null : portMapping_r3.get(\"targetPort\").errors.max);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"isExternal\", ctx_r1.isExternal);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.protocols);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(17, _c28, portMapping_r3.get(\"protocol\").pending));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", portMapping_r3.get(\"protocol\").errors == null ? null : portMapping_r3.get(\"protocol\").errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", portMapping_r3.get(\"protocol\").errors == null ? null : portMapping_r3.get(\"protocol\").errors.validProtocol);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.isRemovable(i_r4));\n  }\n}\n\nconst i18n = {\n  MSG_PORT_MAPPINGS_SERVICE_TYPE_NONE_LABEL: 'None',\n  MSG_PORT_MAPPINGS_SERVICE_TYPE_INTERNAL_LABEL: 'Internal',\n  MSG_PORT_MAPPINGS_SERVICE_TYPE_EXTERNAL_LABEL: 'External'\n};\nconst NO_SERVICE = {\n  label: i18n.MSG_PORT_MAPPINGS_SERVICE_TYPE_NONE_LABEL,\n  external: false\n};\nconst INT_SERVICE = {\n  label: i18n.MSG_PORT_MAPPINGS_SERVICE_TYPE_INTERNAL_LABEL,\n  external: false\n};\nconst EXT_SERVICE = {\n  label: i18n.MSG_PORT_MAPPINGS_SERVICE_TYPE_EXTERNAL_LABEL,\n  external: true\n};\nexport let PortMappingsComponent = /*#__PURE__*/(() => {\n  class PortMappingsComponent {\n    constructor(fb_, http_) {\n      this.fb_ = fb_;\n      this.http_ = http_;\n      this.changeExternal = new EventEmitter();\n\n      this.propagateChange = _ => {};\n    }\n\n    ngOnInit() {\n      this.serviceTypes = [NO_SERVICE, INT_SERVICE, EXT_SERVICE];\n      this.portMappingForm = this.fb_.group({\n        serviceType: NO_SERVICE,\n        portMappings: this.fb_.array([])\n      });\n      this.serviceType.valueChanges.subscribe(() => {\n        this.changeServiceType();\n      });\n      this.portMappingForm.valueChanges.subscribe(v => {\n        this.propagateChange(v);\n      });\n    }\n\n    validate(_) {\n      return this.portMappingForm.statusChanges.pipe(startWith(this.portMappingForm.status), filter(() => !this.portMappingForm.pending), take(1), map(() => {\n        return this.portMappingForm.invalid ? {\n          error: true\n        } : null;\n      }));\n    }\n\n    changeServiceType() {\n      // add or remove port mappings\n      if (this.serviceType.value === NO_SERVICE) {\n        const length = this.portMappings.length;\n\n        for (let i = 0; i < length; i++) {\n          this.portMappings.removeAt(0);\n        }\n      } else if (this.portMappings.length === 0) {\n        this.portMappings.push(this.newEmptyPortMapping(this.protocols[0]));\n      } // set flag\n\n\n      this.isExternal = this.serviceType.value.external;\n      this.changeExternal.emit(this.isExternal);\n\n      for (let i = 0; i < this.portMappings.length; i++) {\n        const ele = this.portMappings.at(i).get('protocol');\n        ele.clearAsyncValidators();\n        ele.setAsyncValidators(validateProtocol(this.http_, this.isExternal));\n        ele.updateValueAndValidity();\n      }\n    }\n\n    get portMappings() {\n      return this.portMappingForm.get('portMappings');\n    }\n\n    get serviceType() {\n      return this.portMappingForm.get('serviceType');\n    }\n\n    newEmptyPortMapping(defaultProtocol) {\n      return this.fb_.group({\n        port: ['', Validators.compose([FormValidators.isInteger, Validators.min(1), Validators.max(65535)])],\n        targetPort: ['', Validators.compose([FormValidators.isInteger, Validators.min(1), Validators.max(65535)])],\n        protocol: [defaultProtocol]\n      });\n    }\n    /**\n     * Call checks on port mapping:\n     *  - adds new port mapping when last empty port mapping has been filled\n     *  - validates port mapping\n     */\n\n\n    checkPortMapping(portMappingIndex) {\n      this.addProtocolIfNeeed();\n      this.validatePortMapping(portMappingIndex);\n      this.portMappings.updateValueAndValidity();\n    }\n\n    addProtocolIfNeeed() {\n      const lastPortMapping = this.portMappings.controls[this.portMappings.length - 1];\n\n      if (this.isPortMappingFilled(lastPortMapping)) {\n        this.portMappings.push(this.newEmptyPortMapping(this.protocols[0]));\n      }\n    }\n    /**\n     * Returns true when the given port mapping is filled by the user, i.e., is not empty.\n     */\n\n\n    isPortMappingFilled(portMapping) {\n      return !!portMapping.get('port').value && !!portMapping.get('targetPort').value;\n    }\n    /**\n     * Validates port mapping. In case when only one port is specified it is considered as invalid.\n     */\n\n\n    validatePortMapping(portIndex) {\n      if (portIndex === 0) {\n        return;\n      }\n\n      const portMapping = this.portMappings.at(portIndex);\n      const portElem = portMapping.get('port');\n      const targetPortElem = portMapping.get('targetPort');\n      const port = portElem.value;\n      const targetPort = targetPortElem.value;\n      const filledOrEmpty = this.isPortMappingFilledOrEmpty(port, targetPort);\n      const isValidPort = filledOrEmpty || !!port;\n      const isValidTargetPort = filledOrEmpty || !!targetPort;\n      portElem.setErrors(isValidPort ? null : {\n        required: true\n      });\n      targetPortElem.setErrors(isValidTargetPort ? null : {\n        required: true\n      });\n      this.portMappingForm.updateValueAndValidity();\n    }\n    /**\n     * Returns true when the given port mapping is filled or empty (both ports), false otherwise.\n     */\n\n\n    isPortMappingFilledOrEmpty(port, targetPort) {\n      return !port === !targetPort;\n    }\n\n    isRemovable(index) {\n      return index !== this.portMappings.length - 1;\n    }\n\n    remove(index) {\n      this.portMappings.removeAt(index);\n    }\n    /**\n     * Returns true if the given port mapping is the first in the list.\n     * @param {number} index\n     */\n\n\n    isFirst(index) {\n      return index === 0;\n    }\n\n    writeValue() {}\n\n    registerOnChange(fn) {\n      this.propagateChange = fn;\n    }\n\n    registerOnTouched() {}\n\n  }\n\n  PortMappingsComponent.ɵfac = function PortMappingsComponent_Factory(t) {\n    return new (t || PortMappingsComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.HttpClient));\n  };\n\n  PortMappingsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: PortMappingsComponent,\n    selectors: [[\"kd-port-mappings\"]],\n    inputs: {\n      protocols: \"protocols\",\n      isExternal: \"isExternal\"\n    },\n    outputs: {\n      changeExternal: \"changeExternal\"\n    },\n    features: [i0.ɵɵProvidersFeature([{\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => PortMappingsComponent),\n      multi: true\n    }, {\n      provide: NG_ASYNC_VALIDATORS,\n      useExisting: forwardRef(() => PortMappingsComponent),\n      multi: true\n    }])],\n    decls: 8,\n    vars: 3,\n    consts: function () {\n      let i18n_0;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        const MSG_EXTERNAL_2218082343053095278$$SRC_APP_FRONTEND_CREATE_FROM_FORM_PORTMAPPINGS_COMPONENT_TS_1 = goog.getMsg(\"Service\");\n        i18n_0 = MSG_EXTERNAL_2218082343053095278$$SRC_APP_FRONTEND_CREATE_FROM_FORM_PORTMAPPINGS_COMPONENT_TS_1;\n      } else {\n        i18n_0 = $localize`Service`;\n      }\n\n      let i18n_2;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        const MSG_EXTERNAL_6117946241126833991$$SRC_APP_FRONTEND_CREATE_FROM_FORM_PORTMAPPINGS_COMPONENT_TS__3 = goog.getMsg(\"Port\");\n        i18n_2 = MSG_EXTERNAL_6117946241126833991$$SRC_APP_FRONTEND_CREATE_FROM_FORM_PORTMAPPINGS_COMPONENT_TS__3;\n      } else {\n        i18n_2 = $localize`Port`;\n      }\n\n      let i18n_4;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        const MSG_EXTERNAL_6968498786255952392$$SRC_APP_FRONTEND_CREATE_FROM_FORM_PORTMAPPINGS_COMPONENT_TS__5 = goog.getMsg(\"Target port\");\n        i18n_4 = MSG_EXTERNAL_6968498786255952392$$SRC_APP_FRONTEND_CREATE_FROM_FORM_PORTMAPPINGS_COMPONENT_TS__5;\n      } else {\n        i18n_4 = $localize`Target port`;\n      }\n\n      let i18n_6;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        const MSG_EXTERNAL_3783562484965706612$$SRC_APP_FRONTEND_CREATE_FROM_FORM_PORTMAPPINGS_COMPONENT_TS__7 = goog.getMsg(\"Protocol\");\n        i18n_6 = MSG_EXTERNAL_3783562484965706612$$SRC_APP_FRONTEND_CREATE_FROM_FORM_PORTMAPPINGS_COMPONENT_TS__7;\n      } else {\n        i18n_6 = $localize`Protocol`;\n      }\n\n      let i18n_8;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        const MSG_EXTERNAL_4059609095692307269$$SRC_APP_FRONTEND_CREATE_FROM_FORM_PORTMAPPINGS_COMPONENT_TS___9 = goog.getMsg(\" Port must be an integer. \");\n        i18n_8 = MSG_EXTERNAL_4059609095692307269$$SRC_APP_FRONTEND_CREATE_FROM_FORM_PORTMAPPINGS_COMPONENT_TS___9;\n      } else {\n        i18n_8 = $localize` Port must be an integer. `;\n      }\n\n      let i18n_10;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        const MSG_EXTERNAL_1587442018610013246$$SRC_APP_FRONTEND_CREATE_FROM_FORM_PORTMAPPINGS_COMPONENT_TS___11 = goog.getMsg(\" Port cannot be empty. \");\n        i18n_10 = MSG_EXTERNAL_1587442018610013246$$SRC_APP_FRONTEND_CREATE_FROM_FORM_PORTMAPPINGS_COMPONENT_TS___11;\n      } else {\n        i18n_10 = $localize` Port cannot be empty. `;\n      }\n\n      let i18n_12;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        const MSG_EXTERNAL_1492410338822666987$$SRC_APP_FRONTEND_CREATE_FROM_FORM_PORTMAPPINGS_COMPONENT_TS___13 = goog.getMsg(\" Port must be greater than 0. \");\n        i18n_12 = MSG_EXTERNAL_1492410338822666987$$SRC_APP_FRONTEND_CREATE_FROM_FORM_PORTMAPPINGS_COMPONENT_TS___13;\n      } else {\n        i18n_12 = $localize` Port must be greater than 0. `;\n      }\n\n      let i18n_14;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        const MSG_EXTERNAL_2533627007846224512$$SRC_APP_FRONTEND_CREATE_FROM_FORM_PORTMAPPINGS_COMPONENT_TS___15 = goog.getMsg(\" Port must be less than 65536. \");\n        i18n_14 = MSG_EXTERNAL_2533627007846224512$$SRC_APP_FRONTEND_CREATE_FROM_FORM_PORTMAPPINGS_COMPONENT_TS___15;\n      } else {\n        i18n_14 = $localize` Port must be less than 65536. `;\n      }\n\n      let i18n_16;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        const MSG_EXTERNAL_1520753026948342315$$SRC_APP_FRONTEND_CREATE_FROM_FORM_PORTMAPPINGS_COMPONENT_TS___17 = goog.getMsg(\" Target port must be an integer. \");\n        i18n_16 = MSG_EXTERNAL_1520753026948342315$$SRC_APP_FRONTEND_CREATE_FROM_FORM_PORTMAPPINGS_COMPONENT_TS___17;\n      } else {\n        i18n_16 = $localize` Target port must be an integer. `;\n      }\n\n      let i18n_18;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        const MSG_EXTERNAL_7558664746464390214$$SRC_APP_FRONTEND_CREATE_FROM_FORM_PORTMAPPINGS_COMPONENT_TS___19 = goog.getMsg(\" Target port cannot be empty. \");\n        i18n_18 = MSG_EXTERNAL_7558664746464390214$$SRC_APP_FRONTEND_CREATE_FROM_FORM_PORTMAPPINGS_COMPONENT_TS___19;\n      } else {\n        i18n_18 = $localize` Target port cannot be empty. `;\n      }\n\n      let i18n_20;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        const MSG_EXTERNAL_8743286467894229469$$SRC_APP_FRONTEND_CREATE_FROM_FORM_PORTMAPPINGS_COMPONENT_TS___21 = goog.getMsg(\" Target port must be greater than 0. \");\n        i18n_20 = MSG_EXTERNAL_8743286467894229469$$SRC_APP_FRONTEND_CREATE_FROM_FORM_PORTMAPPINGS_COMPONENT_TS___21;\n      } else {\n        i18n_20 = $localize` Target port must be greater than 0. `;\n      }\n\n      let i18n_22;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        const MSG_EXTERNAL_5839676751732725716$$SRC_APP_FRONTEND_CREATE_FROM_FORM_PORTMAPPINGS_COMPONENT_TS___23 = goog.getMsg(\" Target port must be less than 65536. \");\n        i18n_22 = MSG_EXTERNAL_5839676751732725716$$SRC_APP_FRONTEND_CREATE_FROM_FORM_PORTMAPPINGS_COMPONENT_TS___23;\n      } else {\n        i18n_22 = $localize` Target port must be less than 65536. `;\n      }\n\n      let i18n_24;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        const MSG_EXTERNAL_667646527755443602$$SRC_APP_FRONTEND_CREATE_FROM_FORM_PORTMAPPINGS_COMPONENT_TS___25 = goog.getMsg(\" Protocol is required. \");\n        i18n_24 = MSG_EXTERNAL_667646527755443602$$SRC_APP_FRONTEND_CREATE_FROM_FORM_PORTMAPPINGS_COMPONENT_TS___25;\n      } else {\n        i18n_24 = $localize` Protocol is required. `;\n      }\n\n      let i18n_26;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        const MSG_EXTERNAL_6073552425469046088$$SRC_APP_FRONTEND_CREATE_FROM_FORM_PORTMAPPINGS_COMPONENT_TS___27 = goog.getMsg(\" Invalid protocol. \");\n        i18n_26 = MSG_EXTERNAL_6073552425469046088$$SRC_APP_FRONTEND_CREATE_FROM_FORM_PORTMAPPINGS_COMPONENT_TS___27;\n      } else {\n        i18n_26 = $localize` Invalid protocol. `;\n      }\n\n      return [[\"fxLayout\", \"column\", 3, \"formGroup\"], [\"fxLayout\", \"row\"], [1, \"mat-block\", \"kd-deploy-input-row\", 2, \"width\", \"100%\"], [\"namespace\", \"serviceType\", \"formControlName\", \"serviceType\", \"placeholder\", i18n_0, \"required\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"formArrayName\", \"portMappings\"], [\"fxLayout\", \"row\", 3, \"formGroupName\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"], [\"fxLayout\", \"row\", 3, \"formGroupName\"], [\"md-no-float\", \"\", \"fxFlex\", \"30\", 1, \"kd-deploy-input-row\", \"kd-port-form-field\"], [\"matInput\", \"\", \"type\", \"number\", \"name\", \"port\", \"formControlName\", \"port\", \"placeholder\", i18n_2, 3, \"required\", \"change\"], [4, \"ngIf\"], [\"fxFlex\", \"5\"], [\"matInput\", \"\", \"type\", \"number\", \"name\", \"targetPort\", \"formControlName\", \"targetPort\", \"placeholder\", i18n_4, \"min\", \"1\", \"max\", \"65535\", 3, \"required\", \"change\"], [\"md-no-float\", \"\", \"fxFlex\", \"20\", 1, \"kd-deploy-input-row\", \"kd-port-form-field\"], [\"name\", \"protocol\", \"formControlName\", \"protocol\", \"placeholder\", i18n_6, \"kdValidProtocol\", \"\", \"required\", \"\", 3, \"isExternal\"], [\"mode\", \"indeterminate\", 1, \"kd-deploy-form-progress\", 3, \"ngClass\"], [\"fxFlex\", \"10\"], [\"mat-icon-button\", \"\", 3, \"click\", 4, \"ngIf\"], i18n_8, i18n_10, i18n_12, i18n_14, i18n_16, i18n_18, i18n_20, i18n_22, i18n_24, i18n_26, [\"mat-icon-button\", \"\", 3, \"click\"]];\n    },\n    template: function PortMappingsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"mat-form-field\", 2);\n        i0.ɵɵelementStart(3, \"mat-select\", 3);\n        i0.ɵɵtemplate(4, PortMappingsComponent_mat_option_4_Template, 2, 2, \"mat-option\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementContainerStart(5);\n        i0.ɵɵelementContainerStart(6, 5);\n        i0.ɵɵtemplate(7, PortMappingsComponent_div_7_Template, 23, 19, \"div\", 6);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.portMappingForm);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngForOf\", ctx.serviceTypes);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.portMappings.controls);\n      }\n    },\n    directives: [i3.DefaultLayoutDirective, i1.NgControlStatusGroup, i1.FormGroupDirective, i4.MatFormField, i5.MatSelect, i1.NgControlStatus, i1.FormControlName, i1.RequiredValidator, i6.NgForOf, i7.MatOption, i1.FormArrayName, i1.FormGroupName, i3.DefaultFlexDirective, i8.MatInput, i1.NumberValueAccessor, i1.DefaultValueAccessor, i6.NgIf, i4.MatError, i1.MinValidator, i1.MaxValidator, i9.ProtocolValidator, i10.MatProgressBar, i6.NgClass, i11.DefaultClassDirective, i12.MatButton, i13.MatIcon],\n    styles: [\".kd-port-form-field[_ngcontent-%COMP%] {\\n  margin: 0 0 18px;\\n}\"]\n  });\n  return PortMappingsComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}