{"ast":null,"code":"import { ResourceMeta } from '@common/services/global/actionbar';\nimport { KdStateService } from '@common/services/global/state';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@common/services/global/state\";\nimport * as i2 from \"@angular/material/button\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/material/tooltip\";\nimport * as i5 from \"@angular/material/icon\";\nexport let ActionbarDetailLogsComponent = /*#__PURE__*/(() => {\n  class ActionbarDetailLogsComponent {\n    constructor(kdState_) {\n      this.kdState_ = kdState_;\n    }\n\n    getHref() {\n      return this.kdState_.href('log', this.resourceMeta.objectMeta.name, this.resourceMeta.objectMeta.namespace, this.resourceMeta.typeMeta.kind);\n    }\n\n  }\n\n  ActionbarDetailLogsComponent.ɵfac = function ActionbarDetailLogsComponent_Factory(t) {\n    return new (t || ActionbarDetailLogsComponent)(i0.ɵɵdirectiveInject(i1.KdStateService));\n  };\n\n  ActionbarDetailLogsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ActionbarDetailLogsComponent,\n    selectors: [[\"kd-actionbar-detail-logs\"]],\n    inputs: {\n      resourceMeta: \"resourceMeta\"\n    },\n    decls: 3,\n    vars: 1,\n    consts: function () {\n      let i18n_0;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        const MSG_EXTERNAL_6796979646083613705$$SRC_APP_FRONTEND_COMMON_COMPONENTS_ACTIONBAR_DETAILACTIONS_LOGS_COMPONENT_TS_1 = goog.getMsg(\"View logs\");\n        i18n_0 = MSG_EXTERNAL_6796979646083613705$$SRC_APP_FRONTEND_COMMON_COMPONENTS_ACTIONBAR_DETAILACTIONS_LOGS_COMPONENT_TS_1;\n      } else {\n        i18n_0 = $localize`View logs`;\n      }\n\n      return [[\"mat-icon-button\", \"\", \"color\", \"accent\", \"matTooltip\", i18n_0, \"queryParamsHandling\", \"preserve\", 1, \"kd-toolbar-action\", 3, \"routerLink\"]];\n    },\n    template: function ActionbarDetailLogsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"a\", 0);\n        i0.ɵɵelementStart(1, \"mat-icon\");\n        i0.ɵɵtext(2, \"subject\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"routerLink\", ctx.getHref());\n      }\n    },\n    directives: [i2.MatAnchor, i3.RouterLinkWithHref, i4.MatTooltip, i5.MatIcon],\n    encapsulation: 2\n  });\n  return ActionbarDetailLogsComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}