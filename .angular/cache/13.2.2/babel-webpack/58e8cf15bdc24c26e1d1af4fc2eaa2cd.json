{"ast":null,"code":"// Copyright 2017 The Kubernetes Authors.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { HttpClient } from '@angular/common/http';\nimport { tap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let LocalConfigLoaderService = /*#__PURE__*/(() => {\n  class LocalConfigLoaderService {\n    constructor(http_) {\n      this.http_ = http_;\n      this.appConfig_ = {};\n    }\n\n    get appConfig() {\n      return this.appConfig_;\n    }\n\n    init() {\n      return this.http_.get('assets/config/config.json').pipe(tap(response => this.appConfig_ = response)).toPromise();\n    }\n\n  }\n\n  LocalConfigLoaderService.ɵfac = function LocalConfigLoaderService_Factory(t) {\n    return new (t || LocalConfigLoaderService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  LocalConfigLoaderService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: LocalConfigLoaderService,\n    factory: LocalConfigLoaderService.ɵfac\n  });\n  return LocalConfigLoaderService;\n})();","map":null,"metadata":{},"sourceType":"module"}