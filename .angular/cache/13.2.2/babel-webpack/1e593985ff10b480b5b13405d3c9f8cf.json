{"ast":null,"code":"// Copyright 2017 The Kubernetes Authors.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { forwardRef } from '@angular/core';\nimport { AbstractControl, NG_VALIDATORS } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\n/**\n * Description:\n *    Directive can be used to warn user that some number may be too big for given input field\n *    but not block the actual form submit.\n *\n * Params:\n *    - kdWarnThreshold - Max number that is allowed before input field will be marked with\n *      a warning.\n *    - kdWarnThresholdBind - boolean page scope variable that should be bound to directive. Warning\n *      state change will be populated to this variable.\n *\n * Usage:\n *    <md-input-container>\n *      <input type=\"number\" name=\"maxInput\" kd-warn-threshold=\"100\"\n *             kd-warn-threshold-bind=\"showWarning\">\n *      <span class=\"kd-warn-threshold\" ng-show=\"showWarning\">Warning message</span>\n *    </md-input-container>\n *\n */\n\nexport let WarnThresholdValidator = /*#__PURE__*/(() => {\n  class WarnThresholdValidator {\n    constructor() {}\n\n    validate(control) {\n      if (this.shouldSetWarning(control.value)) {\n        this.hasWarning = true;\n        return {\n          warnThreshold: {\n            value: '333'\n          }\n        };\n      }\n\n      if (this.shouldRemoveWarning(control.value)) {\n        this.hasWarning = false;\n        return null;\n      }\n\n      return null;\n    }\n    /**\n     * Returns true if input number is larger than max allowed number provided as attribute and\n     * there is no warning already set, false otherwise.\n     */\n\n\n    shouldSetWarning(value) {\n      return value > this.kdWarnThreshold;\n    }\n    /**\n     * Returns true if input number is lower or equal to max allowed number provided as attribute\n     * and there is still a warning set, false otherwise.\n     */\n\n\n    shouldRemoveWarning(value) {\n      return !this.hasWarning && !this.shouldSetWarning(value);\n    }\n\n  }\n\n  WarnThresholdValidator.ɵfac = function WarnThresholdValidator_Factory(t) {\n    return new (t || WarnThresholdValidator)();\n  };\n\n  WarnThresholdValidator.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n    type: WarnThresholdValidator,\n    selectors: [[\"\", \"kdWarnThreshold\", \"\"]],\n    inputs: {\n      kdWarnThreshold: \"kdWarnThreshold\"\n    },\n    features: [i0.ɵɵProvidersFeature([{\n      provide: NG_VALIDATORS,\n      useExisting: forwardRef(() => WarnThresholdValidator),\n      multi: true\n    }])]\n  });\n  return WarnThresholdValidator;\n})();","map":null,"metadata":{},"sourceType":"module"}