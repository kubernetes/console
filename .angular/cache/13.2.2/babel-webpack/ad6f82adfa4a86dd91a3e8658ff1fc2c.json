{"ast":null,"code":"// Copyright 2017 The Kubernetes Authors.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { SimpleChanges } from '@angular/core';\nimport { GraphType } from '../graph/component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"../card/component\";\nimport * as i3 from \"../graph/component\";\nimport * as i4 from \"@angular/flex-layout/flex\";\n\nfunction GraphCardComponent_kd_card_0_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r1.graphTitle);\n  }\n}\n\nfunction GraphCardComponent_kd_card_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"kd-card\", 1);\n    i0.ɵɵelementStart(1, \"div\", 2);\n    i0.ɵɵtext(2);\n    i0.ɵɵtemplate(3, GraphCardComponent_kd_card_0_span_3_Template, 2, 1, \"span\", 3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 4);\n    i0.ɵɵelement(5, \"kd-graph\", 5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"graphMode\", true);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r0.graphTitle, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.graphInfo);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"id\", ctx_r0.graphTitle)(\"graphType\", ctx_r0.graphType)(\"metric\", ctx_r0.selectedMetric);\n  }\n}\n\nexport let GraphCardComponent = /*#__PURE__*/(() => {\n  class GraphCardComponent {\n    ngOnChanges(changes) {\n      if (changes['metrics']) {\n        this.metrics = changes['metrics'].currentValue;\n        this.selectedMetric = this.getSelectedMetrics();\n      }\n    }\n\n    getSelectedMetrics() {\n      if (!this.selectedMetricName || this.metrics.length && this.metrics[0].dataPoints.length === 0) {\n        return null;\n      }\n\n      return this.metrics && this.metrics.filter(metric => metric.metricName === this.selectedMetricName)[0];\n    }\n\n    shouldShowGraph() {\n      return this.selectedMetric !== undefined;\n    }\n\n  }\n\n  GraphCardComponent.ɵfac = function GraphCardComponent_Factory(t) {\n    return new (t || GraphCardComponent)();\n  };\n\n  GraphCardComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: GraphCardComponent,\n    selectors: [[\"kd-graph-card\"]],\n    inputs: {\n      graphTitle: \"graphTitle\",\n      graphInfo: \"graphInfo\",\n      graphType: \"graphType\",\n      metrics: \"metrics\",\n      selectedMetricName: \"selectedMetricName\"\n    },\n    features: [i0.ɵɵNgOnChangesFeature],\n    decls: 1,\n    vars: 1,\n    consts: [[3, \"graphMode\", 4, \"ngIf\"], [3, \"graphMode\"], [\"title\", \"\"], [4, \"ngIf\"], [\"content\", \"\"], [\"fxFlex\", \"100\", 3, \"id\", \"graphType\", \"metric\"]],\n    template: function GraphCardComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, GraphCardComponent_kd_card_0_Template, 6, 6, \"kd-card\", 0);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.shouldShowGraph());\n      }\n    },\n    directives: [i1.NgIf, i2.CardComponent, i3.GraphComponent, i4.DefaultFlexDirective],\n    encapsulation: 2\n  });\n  return GraphCardComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}