{"ast":null,"code":"// Copyright 2017 The Kubernetes Authors.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { animate, keyframes, state, style, transition, trigger } from '@angular/animations';\nimport { EventEmitter } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { debounceTime, takeUntil, tap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/button\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\n\nfunction NavItemComponent_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 2);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"@rollInOut\", ctx_r0.animationState);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.indicator);\n  }\n}\n\nconst _c0 = function (a0, a1) {\n  return {\n    externalUrl: a0,\n    redirect: a1\n  };\n};\n\nconst _c1 = function (a0, a1) {\n  return [a0, a1];\n};\n\nconst _c2 = function (a0) {\n  return {\n    exact: a0\n  };\n};\n\nconst _c3 = function () {\n  return [\"kd-nav-item-button-active\"];\n};\n\nconst _c4 = [\"*\"];\nvar NamespacedIndicatorState = /*#__PURE__*/(() => {\n  (function (NamespacedIndicatorState) {\n    NamespacedIndicatorState[\"Enter\"] = \"mouseenter\";\n    NamespacedIndicatorState[\"Leave\"] = \"mouseleave\";\n  })(NamespacedIndicatorState || (NamespacedIndicatorState = {}));\n\n  return NamespacedIndicatorState;\n})();\nconst rollInOut = trigger('rollInOut', [state(NamespacedIndicatorState.Enter, style({\n  width: '72px',\n  'border-radius': '8px'\n})), state(NamespacedIndicatorState.Leave, style({\n  width: '16px',\n  'border-radius': '50%'\n})), transition(`${NamespacedIndicatorState.Leave} => ${NamespacedIndicatorState.Enter}`, [animate('.15s linear', keyframes([style({\n  width: '16px',\n  'border-radius': '50%',\n  color: 'rgba(0,0,0,0)'\n}), style({\n  width: '72px',\n  'border-radius': '8px'\n})]))]), transition(`${NamespacedIndicatorState.Enter} => ${NamespacedIndicatorState.Leave}`, [animate('.15s linear', keyframes([style({\n  width: '72px',\n  'border-radius': '8px',\n  color: 'rgba(0,0,0,0)'\n}), style({\n  width: '16px',\n  'border-radius': '50%'\n})]))])]);\nexport let NavItemComponent = /*#__PURE__*/(() => {\n  class NavItemComponent {\n    constructor() {\n      this.exact = false;\n      this.namespaced = false;\n      this.animationState = NamespacedIndicatorState.Leave;\n      this.mouseStateChanges_ = new EventEmitter();\n      this.debounceTime_ = 500;\n      this.unsubscribe_ = new Subject();\n    }\n\n    get indicator() {\n      return this.animationState === NamespacedIndicatorState.Leave ? 'N' : 'Namespaced';\n    }\n\n    ngOnInit() {\n      this.mouseStateChanges_ // Trigger leave animation immediately, but delay enter animation\n      .pipe(tap(state => this.animationState = state === NamespacedIndicatorState.Leave ? NamespacedIndicatorState.Leave : this.animationState)).pipe(debounceTime(this.debounceTime_)).pipe(takeUntil(this.unsubscribe_)).subscribe(state => this.animationState = state);\n    }\n\n    ngOnDestroy() {\n      this.unsubscribe_.next();\n      this.unsubscribe_.complete();\n    }\n\n    onHover(event) {\n      this.mouseStateChanges_.emit(event.type);\n    }\n\n  }\n\n  NavItemComponent.ɵfac = function NavItemComponent_Factory(t) {\n    return new (t || NavItemComponent)();\n  };\n\n  NavItemComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: NavItemComponent,\n    selectors: [[\"kd-nav-item\"]],\n    hostBindings: function NavItemComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"mouseenter\", function NavItemComponent_mouseenter_HostBindingHandler($event) {\n          return ctx.onHover($event);\n        })(\"mouseleave\", function NavItemComponent_mouseleave_HostBindingHandler($event) {\n          return ctx.onHover($event);\n        });\n      }\n    },\n    inputs: {\n      state: \"state\",\n      url: \"url\",\n      redirect: \"redirect\",\n      exact: \"exact\",\n      namespaced: \"namespaced\"\n    },\n    ngContentSelectors: _c4,\n    decls: 3,\n    vars: 13,\n    consts: [[\"mat-button\", \"\", \"queryParamsHandling\", \"preserve\", 1, \"kd-nav-item-button\", 3, \"routerLink\", \"routerLinkActiveOptions\", \"routerLinkActive\"], [\"class\", \"kd-namespaced-item\", 4, \"ngIf\"], [1, \"kd-namespaced-item\"]],\n    template: function NavItemComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵelementStart(0, \"a\", 0);\n        i0.ɵɵprojection(1);\n        i0.ɵɵtemplate(2, NavItemComponent_span_2_Template, 2, 2, \"span\", 1);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction2(7, _c1, ctx.state, i0.ɵɵpureFunction2(4, _c0, ctx.url, ctx.redirect)))(\"routerLinkActiveOptions\", i0.ɵɵpureFunction1(10, _c2, ctx.exact))(\"routerLinkActive\", i0.ɵɵpureFunction0(12, _c3));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.namespaced);\n      }\n    },\n    directives: [i1.MatAnchor, i2.RouterLinkWithHref, i2.RouterLinkActive, i3.NgIf],\n    styles: [\"[_nghost-%COMP%] {\\n  display: block;\\n}\\n\\n.kd-nav-item-button[_ngcontent-%COMP%] {\\n  border-radius: 2px;\\n  display: block;\\n  font-weight: 400;\\n  height: 44px;\\n  line-height: 44px;\\n  margin: 1px 0;\\n  max-height: 44px;\\n  padding: 0 16px 0 12px;\\n  text-align: left;\\n  text-transform: none;\\n  white-space: nowrap;\\n  width: 100%;\\n}\\n\\n.kd-nav-item-button[_ngcontent-%COMP%]   .kd-namespaced-item[_ngcontent-%COMP%] {\\n  display: inline-block;\\n  font-size: 10px;\\n  height: 16px;\\n  line-height: 18px;\\n  margin-left: 4px;\\n  text-align: center;\\n  vertical-align: text-top;\\n}\\n\\n.kd-nav-item[_nghost-%COMP%]   .kd-nav-item-button[_ngcontent-%COMP%], .kd-nav-item   [_nghost-%COMP%]   .kd-nav-item-button[_ngcontent-%COMP%] {\\n  line-height: 32px;\\n  max-height: 32px;\\n  min-height: 32px;\\n}\\n\\n.kd-nav-group-item[_nghost-%COMP%]   .kd-nav-item-button[_ngcontent-%COMP%], .kd-nav-group-item   [_nghost-%COMP%]   .kd-nav-item-button[_ngcontent-%COMP%] {\\n  font-weight: 500;\\n}\"],\n    data: {\n      animation: [rollInOut]\n    }\n  });\n  return NavItemComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}