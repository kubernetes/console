{"ast":null,"code":"// Copyright 2017 The Kubernetes Authors.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { HttpClient } from '@angular/common/http';\nimport { NgZone } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ConfigService } from '@common/services/global/config';\nimport { AsKdError, ErrorCode, ErrorStatus, K8SError } from '@common/errors/errors';\nimport { AuthService } from '@common/services/global/authentication';\nimport { HistoryService } from '@common/services/global/history';\nimport { PluginsConfigService } from '@common/services/global/plugin';\nimport { PermissionsService } from '@common/services/global/permissions';\nimport jwtDecode, { JwtPayload } from 'jwt-decode';\nimport { CookieService } from 'ngx-cookie-service';\nimport { map } from 'rxjs/operators';\nimport { CONFIG_DI_TOKEN } from '../index.config';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@common/services/global/authentication\";\nimport * as i2 from \"ngx-cookie-service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common/http\";\nimport * as i5 from \"@common/services/global/plugin\";\nimport * as i6 from \"@common/services/global/config\";\nimport * as i7 from \"@common/services/global/permissions\";\nimport * as i8 from \"@common/services/global/history\";\nimport * as i9 from \"@angular/flex-layout/flex\";\nimport * as i10 from \"../common/components/card/component\";\nimport * as i11 from \"@angular/forms\";\nimport * as i12 from \"@angular/material/radio\";\nimport * as i13 from \"@angular/common\";\nimport * as i14 from \"@angular/flex-layout/extended\";\nimport * as i15 from \"@angular/material/form-field\";\nimport * as i16 from \"@angular/material/input\";\nimport * as i17 from \"../common/components/uploadfile/component\";\nimport * as i18 from \"@angular/material/button\";\n\nfunction LoginComponent_div_7_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵi18n(1, 19);\n    i0.ɵɵelementContainerEnd();\n  }\n}\n\nfunction LoginComponent_div_7_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵi18n(1, 20);\n    i0.ɵɵelementContainerEnd();\n  }\n}\n\nfunction LoginComponent_div_7_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵi18n(1, 21);\n    i0.ɵɵelementContainerEnd();\n  }\n}\n\nfunction LoginComponent_div_7_ng_container_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵi18nStart(1, 22);\n    i0.ɵɵelement(2, \"a\", 23);\n    i0.ɵɵi18nEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r11 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngStyle\", ctx_r11.applyColor());\n  }\n}\n\nfunction LoginComponent_div_7_ng_container_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵi18nStart(1, 24);\n    i0.ɵɵelement(2, \"a\", 25);\n    i0.ɵɵelement(3, \"a\", 26);\n    i0.ɵɵi18nEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r12 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngStyle\", ctx_r12.applyColor());\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngStyle\", ctx_r12.applyColor());\n  }\n}\n\nfunction LoginComponent_div_7_ng_container_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1, \" Pour obtenir votre token et acc\\u00E9der au dashboard: \");\n    i0.ɵɵelementStart(2, \"a\", 27);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \" . \");\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r13 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"href\", ctx_r13.urlLogin, i0.ɵɵsanitizeUrl);\n    i0.ɵɵproperty(\"ngStyle\", ctx_r13.applyColor());\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r13.urlLogin);\n  }\n}\n\nfunction LoginComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelementStart(1, \"mat-radio-button\", 16);\n    i0.ɵɵelementContainerStart(2, 7);\n    i0.ɵɵtemplate(3, LoginComponent_div_7_ng_container_3_Template, 2, 0, \"ng-container\", 17);\n    i0.ɵɵtemplate(4, LoginComponent_div_7_ng_container_4_Template, 2, 0, \"ng-container\", 17);\n    i0.ɵɵtemplate(5, LoginComponent_div_7_ng_container_5_Template, 2, 0, \"ng-container\", 17);\n    i0.ɵɵelementContainerEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\", 18);\n    i0.ɵɵtemplate(7, LoginComponent_div_7_ng_container_7_Template, 3, 1, \"ng-container\", 17);\n    i0.ɵɵtemplate(8, LoginComponent_div_7_ng_container_8_Template, 4, 2, \"ng-container\", 17);\n    i0.ɵɵtemplate(9, LoginComponent_div_7_ng_container_9_Template, 5, 3, \"ng-container\", 17);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const mode_r7 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"value\", mode_r7);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitch\", mode_r7);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitchCase\", ctx_r0.loginModes.Kubeconfig);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitchCase\", ctx_r0.loginModes.Basic);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitchCase\", ctx_r0.loginModes.Token);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitch\", mode_r7);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitchCase\", ctx_r0.loginModes.Kubeconfig);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitchCase\", ctx_r0.loginModes.Basic);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitchCase\", ctx_r0.loginModes.Token);\n  }\n}\n\nfunction LoginComponent_mat_form_field_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"mat-form-field\", 28);\n    i0.ɵɵelementStart(1, \"input\", 29);\n    i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_mat_form_field_9_Template_input_ngModelChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r14 = i0.ɵɵnextContext();\n      return ctx_r14.localStorageToken = $event;\n    })(\"change\", function LoginComponent_mat_form_field_9_Template_input_change_1_listener($event) {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r16 = i0.ɵɵnextContext();\n      return ctx_r16.onChange($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.localStorageToken);\n  }\n}\n\nfunction LoginComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r18 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 30);\n    i0.ɵɵelementStart(1, \"mat-form-field\", 31);\n    i0.ɵɵelementStart(2, \"input\", 32);\n    i0.ɵɵlistener(\"change\", function LoginComponent_div_10_Template_input_change_2_listener($event) {\n      i0.ɵɵrestoreView(_r18);\n      const ctx_r17 = i0.ɵɵnextContext();\n      return ctx_r17.onChange($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"mat-form-field\", 31);\n    i0.ɵɵelementStart(4, \"input\", 33);\n    i0.ɵɵlistener(\"change\", function LoginComponent_div_10_Template_input_change_4_listener($event) {\n      i0.ɵɵrestoreView(_r18);\n      const ctx_r19 = i0.ɵɵnextContext();\n      return ctx_r19.onChange($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction LoginComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r21 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 28);\n    i0.ɵɵelementStart(1, \"kd-upload-file\", 34);\n    i0.ɵɵlistener(\"onLoad\", function LoginComponent_div_11_Template_kd_upload_file_onLoad_1_listener($event) {\n      i0.ɵɵrestoreView(_r21);\n      const ctx_r20 = i0.ɵɵnextContext();\n      return ctx_r20.onChange($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction LoginComponent_mat_error_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\", 35);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const error_r22 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate3(\" \", error_r22.status, \" (\", error_r22.code, \"): \", error_r22.message, \" \");\n  }\n}\n\nfunction LoginComponent_mat_error_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\", 35);\n    i0.ɵɵi18nStart(1, 36);\n    i0.ɵɵelement(2, \"a\", 37);\n    i0.ɵɵi18nEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction LoginComponent_button_17_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r24 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 38);\n    i0.ɵɵlistener(\"click\", function LoginComponent_button_17_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r24);\n      const ctx_r23 = i0.ɵɵnextContext();\n      return ctx_r23.skip();\n    });\n    i0.ɵɵi18n(1, 39);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngStyle\", ctx_r6.applyStyles());\n  }\n}\n\nvar LoginModes = /*#__PURE__*/(() => {\n  (function (LoginModes) {\n    LoginModes[\"Kubeconfig\"] = \"kubeconfig\";\n    LoginModes[\"Basic\"] = \"basic\";\n    LoginModes[\"Token\"] = \"token\";\n  })(LoginModes || (LoginModes = {}));\n\n  return LoginModes;\n})();\nexport let LoginComponent = /*#__PURE__*/(() => {\n  class LoginComponent {\n    constructor(authService_, cookies_, state_, http_, ngZone_, route_, pluginConfigService_, config, permission, historyService_, CONFIG) {\n      this.authService_ = authService_;\n      this.cookies_ = cookies_;\n      this.state_ = state_;\n      this.http_ = http_;\n      this.ngZone_ = ngZone_;\n      this.route_ = route_;\n      this.pluginConfigService_ = pluginConfigService_;\n      this.config = config;\n      this.permission = permission;\n      this.historyService_ = historyService_;\n      this.CONFIG = CONFIG;\n      this.loginModes = LoginModes;\n      this.selectedAuthenticationMode = LoginModes.Token;\n      this.errors = [];\n      this.localStorageToken = undefined;\n      this.urlEnv = '';\n      this.urlLogin = '';\n      this.enabledAuthenticationModes_ = [];\n      this.isLoginSkippable_ = false;\n    }\n\n    ngOnInit() {\n      this.localStorageToken = localStorage.getItem('token');\n      this.token_ = this.localStorageToken;\n      localStorage.clear();\n      this.urlEnv = window.location + '/oidc/';\n      this.urlLogin = this.urlEnv.replace('/#/login', '');\n      this.http_.get('api/v1/login/modes').subscribe(enabledModes => {\n        this.enabledAuthenticationModes_ = enabledModes.modes;\n        this.enabledAuthenticationModes_.push(LoginModes.Kubeconfig);\n        this.selectedAuthenticationMode = this.selectedAuthenticationMode ? this.selectedAuthenticationMode : this.enabledAuthenticationModes_[0];\n      });\n      this.http_.get('api/v1/login/skippable').subscribe(loginSkippableResponse => {\n        this.isLoginSkippable_ = loginSkippableResponse.skippable;\n      });\n      this.route_.paramMap.pipe(map(() => window.history.state)).subscribe(state => {\n        if (state.error) {\n          this.errors = [state.error];\n        }\n      });\n\n      if (this.token_ !== null) {\n        this.login();\n      }\n    }\n\n    getEnabledAuthenticationModes() {\n      //return this.enabledAuthenticationModes_;\n      return ['token'];\n    }\n\n    login() {\n      if (this.hasEmptyToken_()) {\n        this.errors = [{\n          code: ErrorCode.badRequest,\n          status: ErrorStatus.badRequest,\n          message: 'Empty token provided'\n        }];\n        return;\n      }\n\n      if (!this.isValidToken_()) {\n        return;\n      }\n\n      this.saveLastLoginMode_();\n      this.authService_.login(this.getLoginSpec_()).subscribe(errors => {\n        if (errors.length > 0) {\n          this.errors = errors.map(error => new K8SError(error.ErrStatus).toKdError().localize());\n          return;\n        }\n\n        this.pluginConfigService_.refreshConfig();\n        this.ngZone_.run(() => {\n          this.permission.redirectToNs(this.state_);\n        });\n      }, err => {\n        this.errors = [AsKdError(err)];\n      });\n    }\n\n    skip() {\n      this.authService_.skipLoginPage(true);\n      this.historyService_.goToPreviousState('workloads');\n    }\n\n    isSkipButtonEnabled() {\n      return this.isLoginSkippable_;\n    }\n\n    isLoginEnabled() {\n      return this.authService_.isLoginEnabled();\n    }\n\n    onChange(event) {\n      switch (this.selectedAuthenticationMode) {\n        case LoginModes.Kubeconfig:\n          this.onFileLoad_(event);\n          break;\n\n        case LoginModes.Token:\n          this.token_ = event.target.value.trim();\n          break;\n\n        case LoginModes.Basic:\n          if (event.target.id === 'username') {\n            this.username_ = event.target.value;\n          } else {\n            this.password_ = event.target.value;\n          }\n\n          break;\n\n        default:\n      }\n    }\n\n    hasEmptyToken_() {\n      return this.selectedAuthenticationMode === LoginModes.Token && (!this.token_ || !this.token_.trim());\n    }\n\n    isValidToken_() {\n      if (this.selectedAuthenticationMode !== LoginModes.Token) {\n        return true;\n      }\n\n      try {\n        jwtDecode(this.token_);\n      } catch (e) {\n        this.errors = [{\n          code: ErrorCode.badRequest,\n          status: ErrorStatus.badRequest,\n          message: 'Invalid token provided'\n        }];\n        return false;\n      }\n\n      return true;\n    }\n\n    saveLastLoginMode_() {\n      this.cookies_.set(this.CONFIG.authModeCookieName, this.selectedAuthenticationMode, null, null, null, false, 'Strict');\n    }\n\n    onFileLoad_(file) {\n      this.kubeconfig_ = file.content;\n    }\n\n    getLoginSpec_() {\n      switch (this.selectedAuthenticationMode) {\n        case LoginModes.Kubeconfig:\n          return {\n            kubeConfig: this.kubeconfig_\n          };\n\n        case LoginModes.Token:\n          return {\n            token: this.token_\n          };\n\n        case LoginModes.Basic:\n          return {\n            username: this.username_,\n            password: this.password_\n          };\n\n        default:\n          return {};\n      }\n    }\n\n    applyStyles() {\n      const styles = {\n        'background-color': this.config.getColor()\n      };\n      return styles;\n    }\n\n    applyColor() {\n      const styles = {\n        color: this.config.getColor()\n      };\n      return styles;\n    }\n\n    getTitle() {\n      return this.config.getTitle();\n    }\n\n    getColor() {\n      return this.config.getColor();\n    }\n\n  }\n\n  LoginComponent.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.CookieService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.HttpClient), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i3.ActivatedRoute), i0.ɵɵdirectiveInject(i5.PluginsConfigService), i0.ɵɵdirectiveInject(i6.ConfigService), i0.ɵɵdirectiveInject(i7.PermissionsService), i0.ɵɵdirectiveInject(i8.HistoryService), i0.ɵɵdirectiveInject(CONFIG_DI_TOKEN));\n  };\n\n  LoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"kd-login\"]],\n    decls: 18,\n    vars: 14,\n    consts: function () {\n      let i18n_0;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        const MSG_EXTERNAL_6624454320005583845$$SRC_APP_FRONTEND_LOGIN_COMPONENT_TS_1 = goog.getMsg(\" Sign in \");\n        i18n_0 = MSG_EXTERNAL_6624454320005583845$$SRC_APP_FRONTEND_LOGIN_COMPONENT_TS_1;\n      } else {\n        i18n_0 = $localize` Sign in `;\n      }\n\n      let i18n_2;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        const MSG_EXTERNAL_5666190010581393226$$SRC_APP_FRONTEND_LOGIN_COMPONENT_TS___3 = goog.getMsg(\"Kubeconfig\");\n        i18n_2 = MSG_EXTERNAL_5666190010581393226$$SRC_APP_FRONTEND_LOGIN_COMPONENT_TS___3;\n      } else {\n        i18n_2 = $localize`Kubeconfig`;\n      }\n\n      let i18n_4;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        const MSG_EXTERNAL_8643289769990675407$$SRC_APP_FRONTEND_LOGIN_COMPONENT_TS___5 = goog.getMsg(\"Basic\");\n        i18n_4 = MSG_EXTERNAL_8643289769990675407$$SRC_APP_FRONTEND_LOGIN_COMPONENT_TS___5;\n      } else {\n        i18n_4 = $localize`Basic`;\n      }\n\n      let i18n_6;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        const MSG_EXTERNAL_3039940756451018621$$SRC_APP_FRONTEND_LOGIN_COMPONENT_TS___7 = goog.getMsg(\"Token\");\n        i18n_6 = MSG_EXTERNAL_3039940756451018621$$SRC_APP_FRONTEND_LOGIN_COMPONENT_TS___7;\n      } else {\n        i18n_6 = $localize`Token`;\n      }\n\n      let i18n_8;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        const MSG_EXTERNAL_5888536734854409720$$SRC_APP_FRONTEND_LOGIN_COMPONENT_TS___9 = goog.getMsg(\" Please select the kubeconfig file that you have created to configure access to the cluster. To find out more about how to configure and use kubeconfig file, please refer to the {$startLink}Configure Access to Multiple Clusters{$closeLink} section. \", {\n          \"startLink\": \"\\uFFFD#2\\uFFFD\",\n          \"closeLink\": \"\\uFFFD/#2\\uFFFD\"\n        });\n        i18n_8 = MSG_EXTERNAL_5888536734854409720$$SRC_APP_FRONTEND_LOGIN_COMPONENT_TS___9;\n      } else {\n        i18n_8 = $localize` Please select the kubeconfig file that you have created to configure access to the cluster. To find out more about how to configure and use kubeconfig file, please refer to the ${\"\\uFFFD#2\\uFFFD\"}:START_LINK:Configure Access to Multiple Clusters${\"\\uFFFD/#2\\uFFFD\"}:CLOSE_LINK: section. `;\n      }\n\n      let i18n_10;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        const MSG_EXTERNAL_1242635590134000767$$SRC_APP_FRONTEND_LOGIN_COMPONENT_TS___11 = goog.getMsg(\" Make sure that support for basic authentication is enabled in the cluster. To find out more about how to configure basic authentication, please refer to the {$startLink}Authenticating{$closeLink} and {$startLink_1}ABAC Mode{$closeLink} sections. \", {\n          \"startLink\": \"\\uFFFD#2\\uFFFD\",\n          \"closeLink\": \"[\\uFFFD/#2\\uFFFD|\\uFFFD/#3\\uFFFD]\",\n          \"startLink_1\": \"\\uFFFD#3\\uFFFD\"\n        });\n        i18n_10 = MSG_EXTERNAL_1242635590134000767$$SRC_APP_FRONTEND_LOGIN_COMPONENT_TS___11;\n      } else {\n        i18n_10 = $localize` Make sure that support for basic authentication is enabled in the cluster. To find out more about how to configure basic authentication, please refer to the ${\"\\uFFFD#2\\uFFFD\"}:START_LINK:Authenticating${\"[\\uFFFD/#2\\uFFFD|\\uFFFD/#3\\uFFFD]\"}:CLOSE_LINK: and ${\"\\uFFFD#3\\uFFFD\"}:START_LINK_1:ABAC Mode${\"[\\uFFFD/#2\\uFFFD|\\uFFFD/#3\\uFFFD]\"}:CLOSE_LINK: sections. `;\n      }\n\n      i18n_10 = i0.ɵɵi18nPostprocess(i18n_10);\n      let i18n_12;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        const MSG_EXTERNAL_5248717555542428023$$SRC_APP_FRONTEND_LOGIN_COMPONENT_TS__13 = goog.getMsg(\"Username\");\n        i18n_12 = MSG_EXTERNAL_5248717555542428023$$SRC_APP_FRONTEND_LOGIN_COMPONENT_TS__13;\n      } else {\n        i18n_12 = $localize`Username`;\n      }\n\n      let i18n_14;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        const MSG_EXTERNAL_1431416938026210429$$SRC_APP_FRONTEND_LOGIN_COMPONENT_TS__15 = goog.getMsg(\"Password\");\n        i18n_14 = MSG_EXTERNAL_1431416938026210429$$SRC_APP_FRONTEND_LOGIN_COMPONENT_TS__15;\n      } else {\n        i18n_14 = $localize`Password`;\n      }\n\n      let i18n_16;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        const MSG_EXTERNAL_1498711031361519795$$SRC_APP_FRONTEND_LOGIN_COMPONENT_TS__17 = goog.getMsg(\"Choose kubeconfig file\");\n        i18n_16 = MSG_EXTERNAL_1498711031361519795$$SRC_APP_FRONTEND_LOGIN_COMPONENT_TS__17;\n      } else {\n        i18n_16 = $localize`Choose kubeconfig file`;\n      }\n\n      let i18n_18;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        const MSG_EXTERNAL_3023204951161066037$$SRC_APP_FRONTEND_LOGIN_COMPONENT_TS__19 = goog.getMsg(\" Insecure access detected. Sign in will not be available. Access Dashboard securely over HTTPS or using localhost. Read more {$startLink} here {$closeLink}. \", {\n          \"startLink\": \"\\uFFFD#2\\uFFFD\",\n          \"closeLink\": \"\\uFFFD/#2\\uFFFD\"\n        });\n        i18n_18 = MSG_EXTERNAL_3023204951161066037$$SRC_APP_FRONTEND_LOGIN_COMPONENT_TS__19;\n      } else {\n        i18n_18 = $localize` Insecure access detected. Sign in will not be available. Access Dashboard securely over HTTPS or using localhost. Read more ${\"\\uFFFD#2\\uFFFD\"}:START_LINK: here ${\"\\uFFFD/#2\\uFFFD\"}:CLOSE_LINK:. `;\n      }\n\n      let i18n_20;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        const MSG_EXTERNAL_2673201572391733340$$SRC_APP_FRONTEND_LOGIN_COMPONENT_TS__21 = goog.getMsg(\" Skip \");\n        i18n_20 = MSG_EXTERNAL_2673201572391733340$$SRC_APP_FRONTEND_LOGIN_COMPONENT_TS__21;\n      } else {\n        i18n_20 = $localize` Skip `;\n      }\n\n      return [[\"fxFlex\", \"\", \"fxLayoutAlign\", \"space-around center\", 1, \"kd-bg-background\"], [\"titleClasses\", \"kd-card-top-radius kd-bg-primary kd-accent\", 3, \"expandable\", \"color\"], [\"title\", \"\"], [\"content\", \"\"], [\"fxLayout\", \"column\", 3, \"ngSubmit\"], [\"name\", \"login\", 3, \"ngModel\", \"ngModelChange\"], [4, \"ngFor\", \"ngForOf\"], [3, \"ngSwitch\"], [\"class\", \"kd-login-input\", 4, \"ngSwitchCase\"], [\"fxLayout\", \"column\", 4, \"ngSwitchCase\"], [\"class\", \"kd-login-input kd-error kd-error-text\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"kd-login-input kd-error kd-error-text\", 4, \"ngIf\"], [\"fxFlex\", \"none\", \"fxLayout\", \"row\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\", 1, \"kd-login-button\", 3, \"ngStyle\", \"disabled\"], i18n_0, [\"mat-button\", \"\", \"color\", \"primary\", \"type\", \"button\", \"class\", \"kd-login-button\", 3, \"ngStyle\", \"click\", 4, \"ngIf\"], [\"color\", \"primary\", 3, \"value\"], [4, \"ngSwitchCase\"], [1, \"kd-login-mode-description\", 3, \"ngSwitch\"], i18n_2, i18n_4, i18n_6, i18n_8, [\"href\", \"https://kubernetes.io/docs/tasks/access-application-cluster/configure-access-multiple-clusters/\", 3, \"ngStyle\"], i18n_10, [\"href\", \"https://kubernetes.io/docs/admin/authentication/\", 3, \"ngStyle\"], [\"href\", \"https://kubernetes.io/docs/admin/authorization/abac/\", 3, \"ngStyle\"], [3, \"href\", \"ngStyle\"], [1, \"kd-login-input\"], [\"matInput\", \"\", \"id\", \"token\", \"name\", \"token\", \"required\", \"\", \"type\", \"password\", 3, \"ngModel\", \"ngModelChange\", \"change\"], [\"fxLayout\", \"column\"], [\"fxFlex\", \"\", 1, \"kd-login-input\"], [\"id\", \"username\", \"name\", \"username\", \"matInput\", \"\", \"placeholder\", i18n_12, \"required\", \"\", 3, \"change\"], [\"id\", \"password\", \"name\", \"password\", \"matInput\", \"\", \"placeholder\", i18n_14, \"type\", \"password\", \"required\", \"\", 3, \"change\"], [\"label\", i18n_16, 3, \"onLoad\"], [1, \"kd-login-input\", \"kd-error\", \"kd-error-text\"], i18n_18, [\"href\", \"https://github.com/kubernetes/dashboard/blob/master/docs/user/accessing-dashboard/README.md#login-not-available\", \"target\", \"_blank\"], [\"mat-button\", \"\", \"color\", \"primary\", \"type\", \"button\", 1, \"kd-login-button\", 3, \"ngStyle\", \"click\"], i18n_20];\n    },\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"kd-card\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵtext(3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"div\", 3);\n        i0.ɵɵelementStart(5, \"form\", 4);\n        i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_5_listener() {\n          return ctx.login();\n        });\n        i0.ɵɵelementStart(6, \"mat-radio-group\", 5);\n        i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_mat_radio_group_ngModelChange_6_listener($event) {\n          return ctx.selectedAuthenticationMode = $event;\n        });\n        i0.ɵɵtemplate(7, LoginComponent_div_7_Template, 10, 9, \"div\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementContainerStart(8, 7);\n        i0.ɵɵtemplate(9, LoginComponent_mat_form_field_9_Template, 2, 1, \"mat-form-field\", 8);\n        i0.ɵɵtemplate(10, LoginComponent_div_10_Template, 5, 0, \"div\", 9);\n        i0.ɵɵtemplate(11, LoginComponent_div_11_Template, 2, 0, \"div\", 8);\n        i0.ɵɵtemplate(12, LoginComponent_mat_error_12_Template, 2, 3, \"mat-error\", 10);\n        i0.ɵɵtemplate(13, LoginComponent_mat_error_13_Template, 3, 0, \"mat-error\", 11);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementStart(14, \"div\", 12);\n        i0.ɵɵelementStart(15, \"button\", 13);\n        i0.ɵɵi18n(16, 14);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(17, LoginComponent_button_17_Template, 2, 1, \"button\", 15);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"expandable\", false)(\"color\", ctx.config.getColor());\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.getTitle());\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngModel\", ctx.selectedAuthenticationMode);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.getEnabledAuthenticationModes());\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngSwitch\", ctx.selectedAuthenticationMode);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngSwitchCase\", ctx.loginModes.Token);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngSwitchCase\", ctx.loginModes.Basic);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngSwitchCase\", ctx.loginModes.Kubeconfig);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.errors);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.isLoginEnabled());\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngStyle\", ctx.applyStyles())(\"disabled\", !ctx.isLoginEnabled());\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.isSkipButtonEnabled());\n      }\n    },\n    directives: [i9.DefaultFlexDirective, i9.DefaultLayoutAlignDirective, i10.CardComponent, i11.ɵNgNoValidate, i11.NgControlStatusGroup, i11.NgForm, i9.DefaultLayoutDirective, i12.MatRadioGroup, i11.NgControlStatus, i11.NgModel, i13.NgForOf, i12.MatRadioButton, i13.NgSwitch, i13.NgSwitchCase, i13.NgStyle, i14.DefaultStyleDirective, i15.MatFormField, i16.MatInput, i11.DefaultValueAccessor, i11.RequiredValidator, i17.UploadFileComponent, i15.MatError, i13.NgIf, i18.MatButton],\n    styles: [\".kd-login-mode-description[_ngcontent-%COMP%] {\\n  padding: 8px 28px 16px;\\n}\\n\\n.kd-login-input[_ngcontent-%COMP%] {\\n  padding: 0 28px;\\n}\\n\\n.kd-login-button[_ngcontent-%COMP%] {\\n  margin: 32px 8px 8px 0;\\n}\\n\\n.kd-error-text[_ngcontent-%COMP%] {\\n  text-align: left;\\n}\\n\\n[_nghost-%COMP%] {\\n  height: 100vh;\\n}\"]\n  });\n  return LoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}