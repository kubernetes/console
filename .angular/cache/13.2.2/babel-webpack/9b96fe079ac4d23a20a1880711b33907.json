{"ast":null,"code":"import { Router } from '@angular/router';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { NAMESPACE_STATE_PARAM } from '@common/params/params';\nimport { ActionbarService } from '@common/services/global/actionbar';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@common/services/global/actionbar\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/flex-layout/flex\";\nimport * as i5 from \"@angular/material/button\";\nimport * as i6 from \"@angular/material/tooltip\";\nimport * as i7 from \"@angular/material/icon\";\nimport * as i8 from \"../../../../../common/components/actionbar/detailactions/component\";\n\nfunction ActionbarComponent_div_0_kd_actionbar_detail_actions_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"kd-actionbar-detail-actions\", 4);\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"objectMeta\", ctx_r1.resourceMeta.objectMeta)(\"typeMeta\", ctx_r1.resourceMeta.typeMeta)(\"displayName\", ctx_r1.resourceMeta.displayName);\n  }\n}\n\nfunction ActionbarComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 1);\n    i0.ɵɵelementStart(1, \"button\", 2);\n    i0.ɵɵlistener(\"click\", function ActionbarComponent_div_0_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return ctx_r2.onClick();\n    });\n    i0.ɵɵelementStart(2, \"mat-icon\");\n    i0.ɵɵtext(3, \"description\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(4, ActionbarComponent_div_0_kd_actionbar_detail_actions_4_Template, 1, 3, \"kd-actionbar-detail-actions\", 3);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.isInitialized);\n  }\n}\n\nexport let ActionbarComponent = /*#__PURE__*/(() => {\n  class ActionbarComponent {\n    constructor(actionbar_, router_) {\n      this.actionbar_ = actionbar_;\n      this.router_ = router_;\n      this.isInitialized = false;\n      this.isVisible = false;\n      this.unsubscribe_ = new Subject();\n    }\n\n    ngOnInit() {\n      this.actionbar_.onInit.pipe(takeUntil(this.unsubscribe_)).subscribe(resourceMeta => {\n        this.resourceMeta = resourceMeta;\n        this.isInitialized = true;\n        this.isVisible = true;\n      });\n      this.actionbar_.onDetailsLeave.pipe(takeUntil(this.unsubscribe_)).subscribe(() => this.isVisible = false);\n    }\n\n    ngOnDestroy() {\n      this.unsubscribe_.next();\n      this.unsubscribe_.complete();\n    }\n\n    onClick() {\n      this.router_.navigate(['workloads'], {\n        queryParamsHandling: 'merge',\n        queryParams: {\n          [NAMESPACE_STATE_PARAM]: this.resourceMeta.objectMeta.name\n        }\n      });\n    }\n\n  }\n\n  ActionbarComponent.ɵfac = function ActionbarComponent_Factory(t) {\n    return new (t || ActionbarComponent)(i0.ɵɵdirectiveInject(i1.ActionbarService), i0.ɵɵdirectiveInject(i2.Router));\n  };\n\n  ActionbarComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ActionbarComponent,\n    selectors: [[\"ng-component\"]],\n    decls: 1,\n    vars: 1,\n    consts: function () {\n      let i18n_0;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        const MSG_EXTERNAL_1119419133766787743$$SRC_APP_FRONTEND_RESOURCE_CLUSTER_NAMESPACE_DETAIL_ACTIONBAR_COMPONENT_TS__1 = goog.getMsg(\"Go to namespace\");\n        i18n_0 = MSG_EXTERNAL_1119419133766787743$$SRC_APP_FRONTEND_RESOURCE_CLUSTER_NAMESPACE_DETAIL_ACTIONBAR_COMPONENT_TS__1;\n      } else {\n        i18n_0 = $localize`Go to namespace`;\n      }\n\n      return [[\"fxLayout\", \"row\", 4, \"ngIf\"], [\"fxLayout\", \"row\"], [\"mat-icon-button\", \"\", \"color\", \"accent\", \"matTooltip\", i18n_0, 1, \"kd-toolbar-action\", 3, \"click\"], [3, \"objectMeta\", \"typeMeta\", \"displayName\", 4, \"ngIf\"], [3, \"objectMeta\", \"typeMeta\", \"displayName\"]];\n    },\n    template: function ActionbarComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, ActionbarComponent_div_0_Template, 5, 1, \"div\", 0);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.isVisible);\n      }\n    },\n    directives: [i3.NgIf, i4.DefaultLayoutDirective, i5.MatButton, i6.MatTooltip, i7.MatIcon, i8.ActionbarDetailActionsComponent],\n    encapsulation: 2\n  });\n  return ActionbarComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}