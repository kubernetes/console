{"ast":null,"code":"// Copyright 2017 The Kubernetes Authors.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { HttpClient } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let PluginsConfigService = /*#__PURE__*/(() => {\n  class PluginsConfigService {\n    constructor(http) {\n      this.http = http;\n      this.pluginConfigPath_ = 'api/v1/plugin/config';\n      this.config_ = {\n        status: 204,\n        plugins: [],\n        errors: []\n      };\n    }\n\n    init() {\n      return this.fetchConfig();\n    }\n\n    refreshConfig() {\n      this.fetchConfig();\n    }\n\n    fetchConfig() {\n      return this.getConfig().toPromise().then(config => this.config_ = config);\n    }\n\n    getConfig() {\n      return this.http.get(this.pluginConfigPath_);\n    }\n\n    pluginsMetadata() {\n      return this.config_.plugins;\n    }\n\n    status() {\n      return this.config_.status;\n    }\n\n  }\n\n  PluginsConfigService.ɵfac = function PluginsConfigService_Factory(t) {\n    return new (t || PluginsConfigService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  PluginsConfigService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: PluginsConfigService,\n    factory: PluginsConfigService.ɵfac\n  });\n  return PluginsConfigService;\n})();","map":null,"metadata":{},"sourceType":"module"}