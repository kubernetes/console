{"ast":null,"code":"// Copyright 2017 The Kubernetes Authors.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { forwardRef } from '@angular/core';\nimport { FormArray, FormBuilder, FormGroup, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Subject } from 'rxjs';\nimport { map, take, takeUntil } from 'rxjs/operators';\nimport { EndpointManager, Resource } from '@common/services/resource/endpoint';\nimport { ResourceService } from '@common/services/resource/resource';\nimport { SettingsHelperService } from '../service';\nimport { AddFallbackNamespaceDialog } from './adddialog/dialog';\nimport { EditFallbackNamespaceDialog } from './editdialog/dialog';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@common/services/resource/resource\";\nimport * as i2 from \"../service\";\nimport * as i3 from \"@angular/material/dialog\";\nimport * as i4 from \"@angular/cdk/layout\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"../../entry/component\";\nimport * as i7 from \"@angular/material/form-field\";\nimport * as i8 from \"@angular/flex-layout/flex\";\nimport * as i9 from \"@angular/material/input\";\nimport * as i10 from \"@angular/material/autocomplete\";\nimport * as i11 from \"@angular/common\";\nimport * as i12 from \"@angular/material/core\";\nimport * as i13 from \"@angular/material/chips\";\nimport * as i14 from \"@angular/material/tooltip\";\nimport * as i15 from \"@angular/material/button\";\nimport * as i16 from \"@angular/material/icon\";\nimport * as i17 from \"@common/pipes/filterby\";\n\nfunction NamespaceSettingsComponent_mat_option_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 17);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const namespace_r6 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", namespace_r6);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", namespace_r6, \" \");\n  }\n}\n\nfunction NamespaceSettingsComponent_mat_chip_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-chip\", 18);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const namespace_r7 = ctx.$implicit;\n    i0.ɵɵproperty(\"matTooltip\", namespace_r7)(\"selectable\", false)(\"removable\", false);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", namespace_r7, \" \");\n  }\n}\n\nfunction NamespaceSettingsComponent_mat_chip_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-chip\", 19);\n    i0.ɵɵi18n(1, 20);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵproperty(\"disabled\", true);\n  }\n}\n\nfunction NamespaceSettingsComponent_mat_chip_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-chip\", 21);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"disabled\", true);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"+ \", ctx_r5.invisibleCount, \"\");\n  }\n}\n\nvar BreakpointElementCount = /*#__PURE__*/(() => {\n  (function (BreakpointElementCount) {\n    BreakpointElementCount[BreakpointElementCount[\"XLarge\"] = 5] = \"XLarge\";\n    BreakpointElementCount[BreakpointElementCount[\"Large\"] = 3] = \"Large\";\n    BreakpointElementCount[BreakpointElementCount[\"Medium\"] = 2] = \"Medium\";\n    BreakpointElementCount[BreakpointElementCount[\"Small\"] = 2] = \"Small\";\n  })(BreakpointElementCount || (BreakpointElementCount = {}));\n\n  return BreakpointElementCount;\n})();\nvar Controls = /*#__PURE__*/(() => {\n  (function (Controls) {\n    Controls[\"DefaultNamespace\"] = \"defaultNamespace\";\n    Controls[\"FallbackList\"] = \"fallbackList\";\n  })(Controls || (Controls = {}));\n\n  return Controls;\n})();\nexport let NamespaceSettingsComponent = /*#__PURE__*/(() => {\n  class NamespaceSettingsComponent {\n    constructor(namespaceService_, settingsHelperService_, dialog_, breakpointObserver_, builder_) {\n      this.namespaceService_ = namespaceService_;\n      this.settingsHelperService_ = settingsHelperService_;\n      this.dialog_ = dialog_;\n      this.breakpointObserver_ = breakpointObserver_;\n      this.builder_ = builder_;\n      this.Controls = Controls;\n      this.namespaces = [];\n      this.visibleNamespaces = 0;\n      this.endpoint_ = EndpointManager.resource(Resource.namespace).list();\n      this.unsubscribe_ = new Subject();\n      this.visibleNamespacesMap = [[Breakpoints.XLarge, BreakpointElementCount.XLarge], [Breakpoints.Large, BreakpointElementCount.Large], [Breakpoints.Medium, BreakpointElementCount.Medium], [Breakpoints.Small, BreakpointElementCount.Small]];\n    }\n\n    get namespaceFallbackList_() {\n      return this.settings_.namespaceFallbackList ? this.settings_.namespaceFallbackList.filter(ns => ns) : [];\n    }\n\n    get formArrayNamespaceFallbackList_() {\n      const arr = this.form.get(Controls.FallbackList).value;\n      return arr ? arr.filter(ns => ns) : [];\n    }\n\n    get invisibleCount() {\n      return this.settings_.namespaceFallbackList ? this.settings_.namespaceFallbackList.length - this.visibleNamespaces : 0;\n    }\n\n    ngOnInit() {\n      this.settings_ = this.settingsHelperService_.settings;\n      this.form = this.builder_.group({\n        [Controls.DefaultNamespace]: this.builder_.control(''),\n        [Controls.FallbackList]: this.builder_.array([])\n      });\n      this.namespaceService_.get(this.endpoint_).pipe(map(list => list.namespaces.map(ns => ns.objectMeta.name))).pipe(takeUntil(this.unsubscribe_)).subscribe(namespaces => this.namespaces = namespaces);\n      this.breakpointObserver_.observe([Breakpoints.Small, Breakpoints.Medium, Breakpoints.Large, Breakpoints.XLarge]).pipe(takeUntil(this.unsubscribe_)).subscribe(result => {\n        const breakpoint = this.visibleNamespacesMap.find(breakpoint => result.breakpoints[breakpoint[0]]);\n        this.visibleNamespaces = breakpoint ? breakpoint[1] : BreakpointElementCount.Small;\n      });\n      this.form.valueChanges.pipe(takeUntil(this.unsubscribe_)).subscribe(this.onFormChange_.bind(this));\n      this.settingsHelperService_.onSettingsChange.pipe(takeUntil(this.unsubscribe_)).subscribe(this.onSettingsChange_.bind(this));\n    }\n\n    ngOnDestroy() {\n      this.unsubscribe_.next();\n      this.unsubscribe_.complete();\n    }\n\n    add() {\n      const dialogConfig = {\n        data: {\n          namespaces: this.namespaces.filter(ns => !this.settingsHelperService_.settings.namespaceFallbackList.includes(ns))\n        }\n      };\n      this.dialog_.open(AddFallbackNamespaceDialog, dialogConfig).afterClosed().pipe(take(1)).subscribe(s => !this.containsNamespace_(s) ? this.addNamespace_(s) : null);\n    }\n\n    edit() {\n      const dialogConfig = {\n        data: {\n          namespaces: this.namespaceFallbackList_\n        }\n      };\n      this.dialog_.open(EditFallbackNamespaceDialog, dialogConfig).afterClosed().pipe(take(1)).subscribe(namespaces => {\n        if (namespaces) {\n          this.settingsHelperService_.settings = {\n            namespaceFallbackList: namespaces\n          };\n        }\n      });\n    } // ControlValueAccessor interface implementation\n\n\n    writeValue(obj) {\n      if (!obj) {\n        return;\n      }\n\n      this.form.setValue(obj);\n    }\n\n    registerOnChange(fn) {\n      this.form.valueChanges.pipe(takeUntil(this.unsubscribe_)).subscribe(fn);\n    }\n\n    registerOnTouched(fn) {\n      this.form.statusChanges.pipe(takeUntil(this.unsubscribe_)).subscribe(fn);\n    }\n\n    addNamespace_(ns) {\n      this.form.get(Controls.FallbackList).push(this.builder_.control(ns));\n    }\n\n    containsNamespace_(ns) {\n      return !ns || this.form.get(Controls.FallbackList).controls.map(c => c.value).indexOf(ns) > -1;\n    }\n\n    onFormChange_() {\n      this.settingsHelperService_.settings = {\n        defaultNamespace: this.form.get(Controls.DefaultNamespace).value,\n        namespaceFallbackList: this.formArrayNamespaceFallbackList_\n      };\n    }\n\n    onSettingsChange_(settings) {\n      this.settings_ = settings;\n      this.form.get(Controls.DefaultNamespace).setValue(this.settings_.defaultNamespace, {\n        emitEvent: false\n      });\n      this.form.get(Controls.FallbackList).controls = this.namespaceFallbackList_.map(_ => this.builder_.control(''));\n      this.form.get(Controls.FallbackList).reset(this.namespaceFallbackList_, {\n        emitEvent: false\n      });\n    }\n\n  }\n\n  NamespaceSettingsComponent.ɵfac = function NamespaceSettingsComponent_Factory(t) {\n    return new (t || NamespaceSettingsComponent)(i0.ɵɵdirectiveInject(i1.ResourceService), i0.ɵɵdirectiveInject(i2.SettingsHelperService), i0.ɵɵdirectiveInject(i3.MatDialog), i0.ɵɵdirectiveInject(i4.BreakpointObserver), i0.ɵɵdirectiveInject(i5.FormBuilder));\n  };\n\n  NamespaceSettingsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: NamespaceSettingsComponent,\n    selectors: [[\"kd-namespace-settings\"]],\n    features: [i0.ɵɵProvidersFeature([{\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => NamespaceSettingsComponent),\n      multi: true\n    }])],\n    decls: 24,\n    vars: 14,\n    consts: function () {\n      let i18n_0;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        const MSG_EXTERNAL_1014173530798491135$$SRC_APP_FRONTEND_SETTINGS_GLOBAL_NAMESPACE_COMPONENT_TS_1 = goog.getMsg(\"Default namespace\");\n        i18n_0 = MSG_EXTERNAL_1014173530798491135$$SRC_APP_FRONTEND_SETTINGS_GLOBAL_NAMESPACE_COMPONENT_TS_1;\n      } else {\n        i18n_0 = $localize`Default namespace`;\n      }\n\n      let i18n_2;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        const MSG_EXTERNAL_4216509171965074904$$SRC_APP_FRONTEND_SETTINGS_GLOBAL_NAMESPACE_COMPONENT_TS_3 = goog.getMsg(\"Namespace that should be selected by default after logging in.\");\n        i18n_2 = MSG_EXTERNAL_4216509171965074904$$SRC_APP_FRONTEND_SETTINGS_GLOBAL_NAMESPACE_COMPONENT_TS_3;\n      } else {\n        i18n_2 = $localize`Namespace that should be selected by default after logging in.`;\n      }\n\n      let i18n_4;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        const MSG_EXTERNAL_3294686077659093992$$SRC_APP_FRONTEND_SETTINGS_GLOBAL_NAMESPACE_COMPONENT_TS_5 = goog.getMsg(\"Namespace\");\n        i18n_4 = MSG_EXTERNAL_3294686077659093992$$SRC_APP_FRONTEND_SETTINGS_GLOBAL_NAMESPACE_COMPONENT_TS_5;\n      } else {\n        i18n_4 = $localize`Namespace`;\n      }\n\n      let i18n_6;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        const MSG_EXTERNAL_1027767960138955738$$SRC_APP_FRONTEND_SETTINGS_GLOBAL_NAMESPACE_COMPONENT_TS_7 = goog.getMsg(\"Namespace fallback list\");\n        i18n_6 = MSG_EXTERNAL_1027767960138955738$$SRC_APP_FRONTEND_SETTINGS_GLOBAL_NAMESPACE_COMPONENT_TS_7;\n      } else {\n        i18n_6 = $localize`Namespace fallback list`;\n      }\n\n      let i18n_8;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        const MSG_EXTERNAL_3208716248295885865$$SRC_APP_FRONTEND_SETTINGS_GLOBAL_NAMESPACE_COMPONENT_TS_9 = goog.getMsg(\"List of namespaces that should be presented to user without namespace list privileges.\");\n        i18n_8 = MSG_EXTERNAL_3208716248295885865$$SRC_APP_FRONTEND_SETTINGS_GLOBAL_NAMESPACE_COMPONENT_TS_9;\n      } else {\n        i18n_8 = $localize`List of namespaces that should be presented to user without namespace list privileges.`;\n      }\n\n      let i18n_10;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        const MSG_EXTERNAL_2046668453758144264$$SRC_APP_FRONTEND_SETTINGS_GLOBAL_NAMESPACE_COMPONENT_TS__11 = goog.getMsg(\"Add namespaces...\");\n        i18n_10 = MSG_EXTERNAL_2046668453758144264$$SRC_APP_FRONTEND_SETTINGS_GLOBAL_NAMESPACE_COMPONENT_TS__11;\n      } else {\n        i18n_10 = $localize`Add namespaces...`;\n      }\n\n      return [[3, \"formGroup\"], [\"key\", i18n_0, \"desc\", i18n_2], [\"fxFlex\", \"\"], [\"formControlName\", \"defaultNamespace\", \"name\", \"defaultNamespace\", \"placeholder\", i18n_4, \"type\", \"text\", \"matInput\", \"\", 3, \"matAutocomplete\"], [\"namespaceInput\", \"\"], [\"auto\", \"matAutocomplete\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"key\", i18n_6, \"desc\", i18n_8], [\"fxFlex\", \"100\", \"fxLayout\", \"row\"], [\"fxFlex\", \"80\", \"fxLayoutAlign\", \" center\", 1, \"kd-namespace-chip-list\", 3, \"formArrayName\"], [\"style\", \"max-width: 100px; text-overflow: ellipsis; white-space: nowrap; overflow: hidden; display: block\", 3, \"matTooltip\", \"selectable\", \"removable\", 4, \"ngFor\", \"ngForOf\"], [3, \"disabled\", 4, \"ngIf\"], [\"fxFlex\", \"\", \"fxLayoutAlign\", \" center\", 3, \"disabled\", 4, \"ngIf\"], [\"fxFlex\", \"20\", \"fxLayoutAlign\", \"end\"], [\"mat-icon-button\", \"\", 2, \"margin-right\", \"0\", 3, \"click\"], [2, \"font-size\", \"20px\"], [\"mat-icon-button\", \"\", 3, \"click\"], [3, \"value\"], [2, \"max-width\", \"100px\", \"text-overflow\", \"ellipsis\", \"white-space\", \"nowrap\", \"overflow\", \"hidden\", \"display\", \"block\", 3, \"matTooltip\", \"selectable\", \"removable\"], [3, \"disabled\"], i18n_10, [\"fxFlex\", \"\", \"fxLayoutAlign\", \" center\", 3, \"disabled\"]];\n    },\n    template: function NamespaceSettingsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵelementStart(1, \"kd-settings-entry\", 1);\n        i0.ɵɵelementStart(2, \"mat-form-field\", 2);\n        i0.ɵɵelement(3, \"input\", 3, 4);\n        i0.ɵɵelementStart(5, \"mat-autocomplete\", null, 5);\n        i0.ɵɵtemplate(7, NamespaceSettingsComponent_mat_option_7_Template, 2, 2, \"mat-option\", 6);\n        i0.ɵɵpipe(8, \"kdFilterBy\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"kd-settings-entry\", 7);\n        i0.ɵɵelementStart(10, \"mat-form-field\", 2);\n        i0.ɵɵelementStart(11, \"div\", 8);\n        i0.ɵɵelementStart(12, \"mat-chip-list\", 9);\n        i0.ɵɵtemplate(13, NamespaceSettingsComponent_mat_chip_13_Template, 2, 4, \"mat-chip\", 10);\n        i0.ɵɵpipe(14, \"slice\");\n        i0.ɵɵtemplate(15, NamespaceSettingsComponent_mat_chip_15_Template, 2, 1, \"mat-chip\", 11);\n        i0.ɵɵtemplate(16, NamespaceSettingsComponent_mat_chip_16_Template, 2, 2, \"mat-chip\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"div\", 13);\n        i0.ɵɵelementStart(18, \"button\", 14);\n        i0.ɵɵlistener(\"click\", function NamespaceSettingsComponent_Template_button_click_18_listener() {\n          return ctx.edit();\n        });\n        i0.ɵɵelementStart(19, \"mat-icon\", 15);\n        i0.ɵɵtext(20, \"edit\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"button\", 16);\n        i0.ɵɵlistener(\"click\", function NamespaceSettingsComponent_Template_button_click_21_listener() {\n          return ctx.add();\n        });\n        i0.ɵɵelementStart(22, \"mat-icon\");\n        i0.ɵɵtext(23, \"add\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        const _r0 = i0.ɵɵreference(4);\n\n        const _r1 = i0.ɵɵreference(6);\n\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"matAutocomplete\", _r1);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind2(8, 7, ctx.namespaces, _r0.value));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"formArrayName\", ctx.Controls.FallbackList);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind3(14, 10, ctx.form.get(ctx.Controls.FallbackList).value, 0, ctx.visibleNamespaces));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.form.get(ctx.Controls.FallbackList).value.length === 0);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.invisibleCount > 0);\n      }\n    },\n    directives: [i5.ɵNgNoValidate, i5.NgControlStatusGroup, i5.FormGroupDirective, i6.SettingsEntryComponent, i7.MatFormField, i8.DefaultFlexDirective, i5.DefaultValueAccessor, i9.MatInput, i10.MatAutocompleteTrigger, i5.NgControlStatus, i5.FormControlName, i10.MatAutocomplete, i11.NgForOf, i12.MatOption, i8.DefaultLayoutDirective, i13.MatChipList, i8.DefaultLayoutAlignDirective, i5.FormArrayName, i13.MatChip, i14.MatTooltip, i11.NgIf, i15.MatButton, i16.MatIcon],\n    pipes: [i17.FilterByPipe, i11.SlicePipe],\n    styles: [\"kd-settings-entry[_ngcontent-%COMP%]{min-height:56px}\"]\n  });\n  return NamespaceSettingsComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}