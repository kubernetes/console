{"ast":null,"code":"// Copyright 2017 The Kubernetes Authors.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { ComponentFactoryResolver, ComponentRef, SimpleChanges, Type, ViewContainerRef } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nconst _c0 = [\"target\"];\nexport let ColumnComponent = /*#__PURE__*/(() => {\n  class ColumnComponent {\n    constructor(resolver_) {\n      this.resolver_ = resolver_;\n      this.componentRef_ = undefined;\n    }\n\n    ngOnChanges(changes) {\n      if (this.componentRef_ && changes.component) {\n        this.target.remove();\n        this.componentRef_ = undefined;\n      }\n\n      if (!this.componentRef_) {\n        const factory = this.resolver_.resolveComponentFactory(this.component);\n        this.componentRef_ = this.target.createComponent(factory);\n      }\n\n      this.componentRef_.instance.setObjectMeta(this.resource.objectMeta);\n      this.componentRef_.instance.setTypeMeta(this.resource.typeMeta);\n\n      if (this.resource.names !== undefined) {\n        this.componentRef_.instance.setDisplayName(this.resource.names.kind);\n        this.componentRef_.instance.setNamespaced(this.isNamespaced_(this.resource));\n      } // Let the change detector run for out component\n\n\n      this.componentRef_.changeDetectorRef.detectChanges();\n    }\n\n    isNamespaced_(crd) {\n      return crd && crd.scope === 'Namespaced';\n    }\n\n  }\n\n  ColumnComponent.ɵfac = function ColumnComponent_Factory(t) {\n    return new (t || ColumnComponent)(i0.ɵɵdirectiveInject(i0.ComponentFactoryResolver));\n  };\n\n  ColumnComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ColumnComponent,\n    selectors: [[\"kd-dynamic-cell\"]],\n    viewQuery: function ColumnComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 7, ViewContainerRef);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.target = _t.first);\n      }\n    },\n    inputs: {\n      component: \"component\",\n      resource: \"resource\"\n    },\n    features: [i0.ɵɵNgOnChangesFeature],\n    decls: 2,\n    vars: 0,\n    consts: [[\"target\", \"\"]],\n    template: function ColumnComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementContainer(0, null, 0);\n      }\n    },\n    encapsulation: 2\n  });\n  return ColumnComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}