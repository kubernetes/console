{"ast":null,"code":"import { ActivatedRoute } from '@angular/router';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { ActionbarService, ResourceMeta } from '@common/services/global/actionbar';\nimport { NotificationsService } from '@common/services/global/notifications';\nimport { EndpointManager, Resource } from '@common/services/resource/endpoint';\nimport { ResourceService } from '@common/services/resource/resource';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@common/services/resource/resource\";\nimport * as i2 from \"@common/services/global/actionbar\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@common/services/global/notifications\";\nimport * as i5 from \"../../../../common/components/objectmeta/component\";\nimport * as i6 from \"../../../../common/components/policyrule/component\";\nexport let ClusterRoleDetailComponent = /*#__PURE__*/(() => {\n  class ClusterRoleDetailComponent {\n    constructor(clusterRole_, actionbar_, route_, notifications_) {\n      this.clusterRole_ = clusterRole_;\n      this.actionbar_ = actionbar_;\n      this.route_ = route_;\n      this.notifications_ = notifications_;\n      this.unsubscribe_ = new Subject();\n      this.endpoint_ = EndpointManager.resource(Resource.clusterRole);\n      this.isInitialized = false;\n    }\n\n    ngOnInit() {\n      const resourceName = this.route_.snapshot.params.resourceName;\n      this.clusterRole_.get(this.endpoint_.detail(), resourceName).pipe(takeUntil(this.unsubscribe_)).subscribe(d => {\n        this.clusterRole = d;\n        this.notifications_.pushErrors(d.errors);\n        this.actionbar_.onInit.emit(new ResourceMeta('Cluster Role', d.objectMeta, d.typeMeta));\n        this.isInitialized = true;\n      });\n    }\n\n    ngOnDestroy() {\n      this.unsubscribe_.next();\n      this.unsubscribe_.complete();\n      this.actionbar_.onDetailsLeave.emit();\n    }\n\n  }\n\n  ClusterRoleDetailComponent.ɵfac = function ClusterRoleDetailComponent_Factory(t) {\n    return new (t || ClusterRoleDetailComponent)(i0.ɵɵdirectiveInject(i1.ResourceService), i0.ɵɵdirectiveInject(i2.ActionbarService), i0.ɵɵdirectiveInject(i3.ActivatedRoute), i0.ɵɵdirectiveInject(i4.NotificationsService));\n  };\n\n  ClusterRoleDetailComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ClusterRoleDetailComponent,\n    selectors: [[\"kd-cluster-role-detail\"]],\n    decls: 2,\n    vars: 4,\n    consts: [[3, \"initialized\", \"objectMeta\"], [3, \"rules\", \"initialized\"]],\n    template: function ClusterRoleDetailComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"kd-object-meta\", 0);\n        i0.ɵɵelement(1, \"kd-policy-rule-list\", 1);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"initialized\", ctx.isInitialized)(\"objectMeta\", ctx.clusterRole == null ? null : ctx.clusterRole.objectMeta);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"rules\", ctx.clusterRole == null ? null : ctx.clusterRole.rules)(\"initialized\", ctx.isInitialized);\n      }\n    },\n    directives: [i5.ObjectMetaComponent, i6.PolicyRuleListComponent],\n    encapsulation: 2\n  });\n  return ClusterRoleDetailComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}