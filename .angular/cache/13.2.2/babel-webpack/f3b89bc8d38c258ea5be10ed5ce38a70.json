{"ast":null,"code":"// Copyright 2017 The Kubernetes Authors.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nconst baseHref = 'api/v1';\nexport var Resource = /*#__PURE__*/(() => {\n  (function (Resource) {\n    Resource[\"job\"] = \"job\";\n    Resource[\"cronJob\"] = \"cronjob\";\n    Resource[\"crd\"] = \"crd\";\n    Resource[\"crdFull\"] = \"customresourcedefinition\";\n    Resource[\"crdObject\"] = \"object\";\n    Resource[\"daemonSet\"] = \"daemonset\";\n    Resource[\"deployment\"] = \"deployment\";\n    Resource[\"pod\"] = \"pod\";\n    Resource[\"replicaSet\"] = \"replicaset\";\n    Resource[\"oldReplicaSet\"] = \"oldreplicaset\";\n    Resource[\"newReplicaSet\"] = \"newreplicaset\";\n    Resource[\"horizontalPodAutoscaler\"] = \"horizontalpodautoscaler\";\n    Resource[\"replicationController\"] = \"replicationcontroller\";\n    Resource[\"statefulSet\"] = \"statefulset\";\n    Resource[\"node\"] = \"node\";\n    Resource[\"namespace\"] = \"namespace\";\n    Resource[\"persistentVolume\"] = \"persistentvolume\";\n    Resource[\"storageClass\"] = \"storageclass\";\n    Resource[\"clusterRole\"] = \"clusterrole\";\n    Resource[\"clusterRoleBinding\"] = \"clusterrolebinding\";\n    Resource[\"role\"] = \"role\";\n    Resource[\"roleBinding\"] = \"rolebinding\";\n    Resource[\"configMap\"] = \"configmap\";\n    Resource[\"persistentVolumeClaim\"] = \"persistentvolumeclaim\";\n    Resource[\"secret\"] = \"secret\";\n    Resource[\"imagePullSecret\"] = \"imagepullsecret\";\n    Resource[\"ingress\"] = \"ingress\";\n    Resource[\"service\"] = \"service\";\n    Resource[\"serviceAccount\"] = \"serviceaccount\";\n    Resource[\"networkPolicy\"] = \"networkpolicy\";\n    Resource[\"event\"] = \"event\";\n    Resource[\"container\"] = \"container\";\n    Resource[\"plugin\"] = \"plugin\";\n  })(Resource || (Resource = {}));\n\n  return Resource;\n})();\nexport var Utility = /*#__PURE__*/(() => {\n  (function (Utility) {\n    Utility[\"shell\"] = \"shell\";\n  })(Utility || (Utility = {}));\n\n  return Utility;\n})();\n\nclass ResourceEndpoint {\n  constructor(resource_, namespaced_ = false) {\n    this.resource_ = resource_;\n    this.namespaced_ = namespaced_;\n  }\n\n  list() {\n    return `${baseHref}/${this.resource_}${this.namespaced_ ? '/:namespace' : ''}`;\n  }\n\n  listOPA() {\n    return `${baseHref}/${this.resource_}/kube-opa : ''}`;\n  }\n\n  traefik(objectType) {\n    return `api/v1/crd/${this.namespaced_ ? '/:namespace' : ''}/${objectType}.traefik.containo.us/traefik/${objectType}`;\n  }\n\n  detail() {\n    return `${baseHref}/${this.resource_}${this.namespaced_ ? '/:namespace' : ''}/:name`;\n  }\n\n  child(resourceName, relatedResource, resourceNamespace) {\n    if (!resourceNamespace) {\n      resourceNamespace = ':namespace';\n    }\n\n    return `${baseHref}/${this.resource_}${this.namespaced_ ? `/${resourceNamespace}` : ''}/${resourceName}/${relatedResource}`;\n  }\n\n}\n\nclass UtilityEndpoint {\n  constructor(utility_) {\n    this.utility_ = utility_;\n  }\n\n  shell(namespace, resourceName) {\n    return `${baseHref}/${Resource.pod}/${namespace}/${resourceName}/${this.utility_}`;\n  }\n\n}\n\nexport class EndpointManager {\n  static resource(resource, namespaced) {\n    return new ResourceEndpoint(resource, namespaced);\n  }\n\n  static utility(utility) {\n    return new UtilityEndpoint(utility);\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}