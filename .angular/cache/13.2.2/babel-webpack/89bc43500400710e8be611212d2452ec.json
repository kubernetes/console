{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/material/progress-spinner\";\nconst _c0 = [\"kdLoadingSpinner\", \"\"];\n\nfunction LoadingSpinner_mat_spinner_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-spinner\");\n  }\n}\n\nexport let LoadingSpinner = /*#__PURE__*/(() => {\n  class LoadingSpinner {\n    ngOnInit() {\n      if (this.isLoading === undefined) {\n        throw Error('isLoading is a required property of loading spinner.');\n      }\n    }\n\n  }\n\n  LoadingSpinner.ɵfac = function LoadingSpinner_Factory(t) {\n    return new (t || LoadingSpinner)();\n  };\n\n  LoadingSpinner.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoadingSpinner,\n    selectors: [[\"\", \"kdLoadingSpinner\", \"\"]],\n    hostVars: 2,\n    hostBindings: function LoadingSpinner_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"kd-loading-shade\", ctx.isLoading);\n      }\n    },\n    inputs: {\n      isLoading: \"isLoading\"\n    },\n    attrs: _c0,\n    decls: 1,\n    vars: 1,\n    consts: [[4, \"ngIf\"]],\n    template: function LoadingSpinner_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, LoadingSpinner_mat_spinner_0_Template, 1, 0, \"mat-spinner\", 0);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.isLoading);\n      }\n    },\n    directives: [i1.NgIf, i2.MatSpinner],\n    encapsulation: 2\n  });\n  return LoadingSpinner;\n})();","map":null,"metadata":{},"sourceType":"module"}