{"ast":null,"code":"import { PinnerService } from '@common/services/global/pinner';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@common/services/global/pinner\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"../item/component\";\n\nfunction PinnerNavComponent_div_0_kd_nav_item_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"kd-nav-item\", 2);\n    i0.ɵɵi18n(1, 3);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const resource_r2 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"state\", ctx_r1.getResourceHref(resource_r2))(\"namespaced\", resource_r2.namespaced);\n    i0.ɵɵadvance(1);\n    i0.ɵɵi18nExp(ctx_r1.getDisplayName(resource_r2));\n    i0.ɵɵi18nApply(1);\n  }\n}\n\nfunction PinnerNavComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, PinnerNavComponent_div_0_kd_nav_item_1_Template, 2, 3, \"kd-nav-item\", 1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.getPinnedResources());\n  }\n}\n\nexport let PinnerNavComponent = /*#__PURE__*/(() => {\n  class PinnerNavComponent {\n    constructor(pinner_) {\n      this.pinner_ = pinner_;\n    }\n\n    isInitialized() {\n      return this.pinner_.isInitialized();\n    }\n\n    getResourceHref(resource) {\n      let href = `/${resource.kind}`;\n\n      if (resource.namespace !== undefined) {\n        href += `/${resource.namespace}`;\n      }\n\n      href += `/${resource.name}`;\n      return href;\n    }\n\n    getPinnedResources() {\n      return this.pinner_.getPinnedForKind(this.kind);\n    }\n\n    unpin(resource) {\n      this.pinner_.unpinResource(resource);\n    }\n\n    getDisplayName(resource) {\n      return resource.displayName.replace(/([A-Z]+)/g, ' $1').replace(/([A-Z][a-z])/g, ' $1');\n    }\n\n  }\n\n  PinnerNavComponent.ɵfac = function PinnerNavComponent_Factory(t) {\n    return new (t || PinnerNavComponent)(i0.ɵɵdirectiveInject(i1.PinnerService));\n  };\n\n  PinnerNavComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: PinnerNavComponent,\n    selectors: [[\"kd-pinner-nav\"]],\n    inputs: {\n      kind: \"kind\"\n    },\n    decls: 1,\n    vars: 1,\n    consts: function () {\n      let i18n_0;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        const MSG_EXTERNAL_1396733117266624639$$SRC_APP_FRONTEND_CHROME_NAV_PINNER_COMPONENT_TS___1 = goog.getMsg(\"{$interpolation} \", {\n          \"interpolation\": \"\\uFFFD0\\uFFFD\"\n        });\n        i18n_0 = MSG_EXTERNAL_1396733117266624639$$SRC_APP_FRONTEND_CHROME_NAV_PINNER_COMPONENT_TS___1;\n      } else {\n        i18n_0 = $localize`${\"\\uFFFD0\\uFFFD\"}:INTERPOLATION: `;\n      }\n\n      return [[4, \"ngIf\"], [\"class\", \"kd-nav-item\", 3, \"state\", \"namespaced\", 4, \"ngFor\", \"ngForOf\"], [1, \"kd-nav-item\", 3, \"state\", \"namespaced\"], i18n_0];\n    },\n    template: function PinnerNavComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, PinnerNavComponent_div_0_Template, 2, 1, \"div\", 0);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.isInitialized());\n      }\n    },\n    directives: [i2.NgIf, i2.NgForOf, i3.NavItemComponent],\n    styles: [\".kd-nav-container[_ngcontent-%COMP%] {\\n  background-color: transparent;\\n  height: 100%;\\n  width: 258px;\\n}\\n.kd-nav-container.visible[_ngcontent-%COMP%] {\\n  transition: width 0.3s;\\n}\\n.kd-nav-container.hidden[_ngcontent-%COMP%] {\\n  transition: width 0.2s;\\n  width: 0;\\n}\\n.kd-nav-container[_ngcontent-%COMP%]   .kd-nav[_ngcontent-%COMP%] {\\n  background-color: transparent;\\n  font-size: 14px;\\n  overflow-y: auto;\\n  white-space: nowrap;\\n}\\n.kd-nav-container[_ngcontent-%COMP%]   .kd-nav[_ngcontent-%COMP%]   .kd-nav-items[_ngcontent-%COMP%] {\\n  padding: 20px 3px 20px 20px;\\n}\\n.kd-nav-container[_ngcontent-%COMP%]   .kd-nav[_ngcontent-%COMP%]   .kd-nav-items[_ngcontent-%COMP%]   .mat-divider[_ngcontent-%COMP%] {\\n  margin: 8px 8px 16px -20px;\\n}\\n.kd-nav-container[_ngcontent-%COMP%]   .kd-nav[_ngcontent-%COMP%]    > *[_ngcontent-%COMP%] {\\n  flex-shrink: 0;\\n}\\n.kd-nav-item[_ngcontent-%COMP%] {\\n  margin-left: 12px;\\n}\"]\n  });\n  return PinnerNavComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}