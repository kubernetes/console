{"ast":null,"code":"// Copyright 2017 The Kubernetes Authors.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nexport var ResourceRatioModes = /*#__PURE__*/(() => {\n  (function (ResourceRatioModes) {\n    ResourceRatioModes[\"Default\"] = \"default\";\n    ResourceRatioModes[\"Suspendable\"] = \"suspendable\";\n    ResourceRatioModes[\"Completable\"] = \"completable\";\n  })(ResourceRatioModes || (ResourceRatioModes = {}));\n\n  return ResourceRatioModes;\n})();\nexport class Helper {\n  static getResourceRatio(status, totalItems, mode = ResourceRatioModes.Default) {\n    if (totalItems === 0) {\n      return [];\n    }\n\n    let items = [{\n      name: `Running: ${status.running}`,\n      value: status.running / totalItems * 100\n    }];\n\n    switch (mode) {\n      case ResourceRatioModes.Suspendable:\n        items.push({\n          name: `Suspended: ${status.failed}`,\n          value: status.failed / totalItems * 100\n        });\n        break;\n\n      case ResourceRatioModes.Completable:\n        items = items.concat([{\n          name: `Failed: ${status.failed}`,\n          value: status.failed / totalItems * 100\n        }, {\n          name: `Pending: ${status.pending}`,\n          value: status.pending / totalItems * 100\n        }, {\n          name: `Succeeded: ${status.succeeded}`,\n          value: status.succeeded / totalItems * 100\n        }]);\n        break;\n\n      default:\n        items = items.concat([{\n          name: `Failed: ${status.failed}`,\n          value: status.failed / totalItems * 100\n        }, {\n          name: `Pending: ${status.pending}`,\n          value: status.pending / totalItems * 100\n        }]);\n        break;\n    }\n\n    return items;\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}