{"ast":null,"code":"// Copyright 2017 The Kubernetes Authors.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { DOCUMENT } from '@angular/common';\nimport { MatSelect } from '@angular/material/select';\nimport { LocalSettingsService } from '@common/services/global/localsettings';\nimport { ThemeService } from '@common/services/global/theme';\nimport { environment } from '@environments/environment';\nimport { CookieService } from 'ngx-cookie-service';\nimport { CONFIG_DI_TOKEN } from '../../index.config';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@common/services/global/localsettings\";\nimport * as i2 from \"@common/services/global/theme\";\nimport * as i3 from \"ngx-cookie-service\";\nimport * as i4 from \"../../common/components/card/component\";\nimport * as i5 from \"../entry/component\";\nimport * as i6 from \"@angular/material/form-field\";\nimport * as i7 from \"@angular/flex-layout/flex\";\nimport * as i8 from \"@angular/material/select\";\nimport * as i9 from \"@angular/material/core\";\nimport * as i10 from \"@angular/common\";\n\nfunction LocalSettingsComponent_mat_option_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 8);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const theme_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", theme_r1.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", theme_r1.displayName, \" \");\n  }\n}\n\nexport let LocalSettingsComponent = /*#__PURE__*/(() => {\n  class LocalSettingsComponent {\n    constructor(settings_, theme_, cookies_, document_, appConfig_) {\n      this.settings_ = settings_;\n      this.theme_ = theme_;\n      this.cookies_ = cookies_;\n      this.document_ = document_;\n      this.appConfig_ = appConfig_;\n      this.settings = {};\n      this.languages = [];\n    }\n\n    ngOnInit() {\n      this.settings = this.settings_.get();\n      this.languages = this.appConfig_.supportedLanguages;\n      this.selectedLanguage = this.cookies_.get(this.appConfig_.languageCookieName) || this.appConfig_.defaultLanguage;\n      this.themes = this.theme_.themes;\n      this.selectedTheme = this.theme_.theme;\n      this.systemTheme = ThemeService.SystemTheme;\n    }\n\n    onThemeChange() {\n      this.settings.theme = this.selectedTheme;\n      this.settings_.handleThemeChange(this.settings.theme);\n    }\n\n    onLanguageSelected(selectedLanguage) {\n      this.cookies_.set(this.appConfig_.languageCookieName, selectedLanguage);\n      this.document_.location.reload();\n    }\n\n    isProdMode() {\n      return environment.production;\n    }\n\n  }\n\n  LocalSettingsComponent.ɵfac = function LocalSettingsComponent_Factory(t) {\n    return new (t || LocalSettingsComponent)(i0.ɵɵdirectiveInject(i1.LocalSettingsService), i0.ɵɵdirectiveInject(i2.ThemeService), i0.ɵɵdirectiveInject(i3.CookieService), i0.ɵɵdirectiveInject(DOCUMENT), i0.ɵɵdirectiveInject(CONFIG_DI_TOKEN));\n  };\n\n  LocalSettingsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LocalSettingsComponent,\n    selectors: [[\"kd-local-settings\"]],\n    viewQuery: function LocalSettingsComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(MatSelect, 7);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.select_ = _t.first);\n      }\n    },\n    decls: 13,\n    vars: 4,\n    consts: function () {\n      let i18n_0;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        const MSG_EXTERNAL_6560619537691497850$$SRC_APP_FRONTEND_SETTINGS_LOCAL_COMPONENT_TS_1 = goog.getMsg(\"Local settings \");\n        i18n_0 = MSG_EXTERNAL_6560619537691497850$$SRC_APP_FRONTEND_SETTINGS_LOCAL_COMPONENT_TS_1;\n      } else {\n        i18n_0 = $localize`Local settings `;\n      }\n\n      let i18n_2;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        const MSG_EXTERNAL_3780471476291186685$$SRC_APP_FRONTEND_SETTINGS_LOCAL_COMPONENT_TS_3 = goog.getMsg(\" Local settings are stored in the browser cookies, so they are not synchronized between multiple devices. Changes are applied automatically on every change. \");\n        i18n_2 = MSG_EXTERNAL_3780471476291186685$$SRC_APP_FRONTEND_SETTINGS_LOCAL_COMPONENT_TS_3;\n      } else {\n        i18n_2 = $localize` Local settings are stored in the browser cookies, so they are not synchronized between multiple devices. Changes are applied automatically on every change. `;\n      }\n\n      let i18n_4;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        const MSG_EXTERNAL_7103588127254721505$$SRC_APP_FRONTEND_SETTINGS_LOCAL_COMPONENT_TS_5 = goog.getMsg(\"Theme\");\n        i18n_4 = MSG_EXTERNAL_7103588127254721505$$SRC_APP_FRONTEND_SETTINGS_LOCAL_COMPONENT_TS_5;\n      } else {\n        i18n_4 = $localize`Theme`;\n      }\n\n      let i18n_6;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        const MSG_EXTERNAL_5371126920581174501$$SRC_APP_FRONTEND_SETTINGS_LOCAL_COMPONENT_TS_7 = goog.getMsg(\"Choose color theme of the dashboard\");\n        i18n_6 = MSG_EXTERNAL_5371126920581174501$$SRC_APP_FRONTEND_SETTINGS_LOCAL_COMPONENT_TS_7;\n      } else {\n        i18n_6 = $localize`Choose color theme of the dashboard`;\n      }\n\n      return [[3, \"expandable\"], [\"title\", \"\"], i18n_0, [\"content\", \"\"], i18n_2, [\"key\", i18n_4, \"desc\", i18n_6], [\"fxFlex\", \"\"], [\"fxFlex\", \"\", 3, \"value\", \"valueChange\"], [3, \"value\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"]];\n    },\n    template: function LocalSettingsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"kd-card\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵi18n(2, 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 3);\n        i0.ɵɵelementStart(4, \"p\");\n        i0.ɵɵi18n(5, 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(6, \"br\");\n        i0.ɵɵelementStart(7, \"kd-settings-entry\", 5);\n        i0.ɵɵelementStart(8, \"mat-form-field\", 6);\n        i0.ɵɵelementStart(9, \"mat-select\", 7);\n        i0.ɵɵlistener(\"valueChange\", function LocalSettingsComponent_Template_mat_select_valueChange_9_listener($event) {\n          return ctx.selectedTheme = $event;\n        })(\"valueChange\", function LocalSettingsComponent_Template_mat_select_valueChange_9_listener() {\n          return ctx.onThemeChange();\n        });\n        i0.ɵɵelementStart(10, \"mat-option\", 8);\n        i0.ɵɵtext(11, \"System\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(12, LocalSettingsComponent_mat_option_12_Template, 2, 2, \"mat-option\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"expandable\", true);\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"value\", ctx.selectedTheme);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"value\", ctx.systemTheme);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.themes);\n      }\n    },\n    directives: [i4.CardComponent, i5.SettingsEntryComponent, i6.MatFormField, i7.DefaultFlexDirective, i8.MatSelect, i9.MatOption, i10.NgForOf],\n    styles: [\".mat-button-toggle-group[_ngcontent-%COMP%] {\\n  border: 0;\\n}\\n.mat-button-toggle-group[_ngcontent-%COMP%]   .mat-button-toggle[_ngcontent-%COMP%] {\\n  border-radius: 4px;\\n  margin-right: 8px;\\n}\"]\n  });\n  return LocalSettingsComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}