{"ast":null,"code":"// Copyright 2017 The Kubernetes Authors.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { EventEmitter } from '@angular/core';\nimport { DecoderService } from '@common/services/global/decoder';\nimport { RawResource } from 'common/resources/rawresource';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { AlertDialog } from 'common/dialogs/alert/dialog';\nimport { MatDialog } from '@angular/material/dialog';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@common/services/global/decoder\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/material/form-field\";\nimport * as i6 from \"@angular/cdk/text-field\";\nimport * as i7 from \"@angular/material/input\";\nimport * as i8 from \"@angular/forms\";\nimport * as i9 from \"@angular/material/button\";\n\nfunction SecretDetailEditComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 1);\n    i0.ɵɵelementStart(1, \"mat-form-field\", 2);\n    i0.ɵɵelementStart(2, \"textarea\", 3);\n    i0.ɵɵlistener(\"ngModelChange\", function SecretDetailEditComponent_div_0_Template_textarea_ngModelChange_2_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return ctx_r1.text = $event;\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 4);\n    i0.ɵɵelementStart(4, \"button\", 5);\n    i0.ɵɵlistener(\"click\", function SecretDetailEditComponent_div_0_Template_button_click_4_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return ctx_r3.update();\n    });\n    i0.ɵɵi18n(5, 6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"button\", 7);\n    i0.ɵɵlistener(\"click\", function SecretDetailEditComponent_div_0_Template_button_click_6_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.cancel();\n    });\n    i0.ɵɵi18n(7, 8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.text);\n  }\n}\n\nexport let SecretDetailEditComponent = /*#__PURE__*/(() => {\n  class SecretDetailEditComponent {\n    constructor(dialog_, http_, decoder_) {\n      this.dialog_ = dialog_;\n      this.http_ = http_;\n      this.decoder_ = decoder_;\n      this.onClose = new EventEmitter();\n      this.text = '';\n      this.editing_ = false;\n    }\n\n    set editing(value) {\n      this.editing_ = value;\n      this.updateText_();\n    }\n\n    get editing() {\n      return this.editing_;\n    }\n\n    set secret(value) {\n      this.secret_ = value;\n    }\n\n    get secret() {\n      return this.secret_;\n    }\n\n    ngOnInit() {\n      this.updateText_();\n    }\n\n    update() {\n      // Get the latest raw resource, and update it.\n      const url = RawResource.getUrl(this.secret.typeMeta, this.secret.objectMeta);\n      this.http_.get(url).toPromise().then(resource => {\n        const dataValue = this.encode_(this.text);\n        resource.data[this.key] = this.encode_(this.text);\n        const url = RawResource.getUrl(this.secret.typeMeta, this.secret.objectMeta);\n        this.http_.put(url, resource, {\n          headers: this.getHttpHeaders_(),\n          responseType: 'text'\n        }).subscribe(() => {\n          // Update current data value for secret, so refresh isn't needed.\n          this.secret_.data[this.key] = dataValue;\n          this.onClose.emit(true);\n        }, this.handleErrorResponse_.bind(this));\n      });\n    }\n\n    cancel() {\n      this.onClose.emit(true);\n    }\n\n    updateText_() {\n      this.text = this.secret && this.key ? this.decoder_.base64(this.secret.data[this.key]) : '';\n    }\n\n    encode_(s) {\n      return btoa(s);\n    }\n\n    getHttpHeaders_() {\n      const headers = new HttpHeaders();\n      headers.set('Content-Type', 'application/json');\n      headers.set('Accept', 'application/json');\n      return headers;\n    }\n\n    handleErrorResponse_(err) {\n      if (err) {\n        const alertDialogConfig = {\n          width: '630px',\n          data: {\n            title: err.statusText === 'OK' ? 'Internal server error' : err.statusText,\n            message: err.error || 'Could not perform the operation.',\n            confirmLabel: 'OK'\n          }\n        };\n        this.dialog_.open(AlertDialog, alertDialogConfig);\n      }\n    }\n\n  }\n\n  SecretDetailEditComponent.ɵfac = function SecretDetailEditComponent_Factory(t) {\n    return new (t || SecretDetailEditComponent)(i0.ɵɵdirectiveInject(i1.MatDialog), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject(i3.DecoderService));\n  };\n\n  SecretDetailEditComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SecretDetailEditComponent,\n    selectors: [[\"kd-secret-detail-edit\"]],\n    inputs: {\n      key: \"key\",\n      editing: \"editing\",\n      secret: \"secret\"\n    },\n    outputs: {\n      onClose: \"onClose\"\n    },\n    decls: 1,\n    vars: 1,\n    consts: function () {\n      let i18n_0;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        const MSG_EXTERNAL_4021752662928002901$$SRC_APP_FRONTEND_RESOURCE_CONFIG_SECRET_DETAIL_EDIT_COMPONENT_TS__1 = goog.getMsg(\"Update\");\n        i18n_0 = MSG_EXTERNAL_4021752662928002901$$SRC_APP_FRONTEND_RESOURCE_CONFIG_SECRET_DETAIL_EDIT_COMPONENT_TS__1;\n      } else {\n        i18n_0 = $localize`Update`;\n      }\n\n      let i18n_2;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        const MSG_EXTERNAL_2159130950882492111$$SRC_APP_FRONTEND_RESOURCE_CONFIG_SECRET_DETAIL_EDIT_COMPONENT_TS__3 = goog.getMsg(\"Cancel\");\n        i18n_2 = MSG_EXTERNAL_2159130950882492111$$SRC_APP_FRONTEND_RESOURCE_CONFIG_SECRET_DETAIL_EDIT_COMPONENT_TS__3;\n      } else {\n        i18n_2 = $localize`Cancel`;\n      }\n\n      return [[\"class\", \"kd-secret-detail-edit-container\", 4, \"ngIf\"], [1, \"kd-secret-detail-edit-container\"], [1, \"kd-secret-detail-text\"], [\"cdkTextareaAutosize\", \"\", \"cdkAutosizeMinRows\", \"1\", \"cdkAutosizeMaxRows\", \"20\", \"matInput\", \"\", 3, \"ngModel\", \"ngModelChange\"], [1, \"kd-secret-detail-actions\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"id\", \"confirm-edit\", 3, \"click\"], i18n_0, [\"mat-button\", \"\", \"color\", \"primary\", 3, \"click\"], i18n_2];\n    },\n    template: function SecretDetailEditComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, SecretDetailEditComponent_div_0_Template, 8, 1, \"div\", 0);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.secret);\n      }\n    },\n    directives: [i4.NgIf, i5.MatFormField, i6.CdkTextareaAutosize, i7.MatInput, i8.DefaultValueAccessor, i8.NgControlStatus, i8.NgModel, i9.MatButton],\n    styles: [\".kd-secret-detail-text[_ngcontent-%COMP%] {\\n  width: 100%;\\n}\\n.kd-secret-detail-text[_ngcontent-%COMP%]   .mat-input-element[_ngcontent-%COMP%] {\\n  font-family: \\\"Roboto Mono Regular\\\", monospace;\\n  font-size: 14px;\\n}\\n.kd-secret-detail-actions[_ngcontent-%COMP%] {\\n  min-height: 52px;\\n  padding: 8px 0;\\n}\"]\n  });\n  return SecretDetailEditComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}