{"ast":null,"code":"// Copyright 2017 The Kubernetes Authors.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { ChangeDetectorRef, SimpleChanges } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog'; // @ts-ignore\n\nimport truncateUrl from 'truncate-url';\nimport { GlobalSettingsService } from '../../services/global/globalsettings';\nimport { ChipDialog } from './chipdialog/dialog';\nimport { KdStateService } from '@common/services/global/state';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@common/services/global/state\";\nimport * as i2 from \"../../services/global/globalsettings\";\nimport * as i3 from \"@angular/material/dialog\";\nimport * as i4 from \"@angular/material/chips\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/router\";\n\nfunction ChipsComponent_ng_container_1_mat_chip_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"span\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"a\", 5);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const key_r3 = i0.ɵɵnextContext(2).$implicit;\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", key_r3, \":\\u00A0\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"routerLink\", ctx_r6.getSerializedHref(ctx_r6.map[key_r3]));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r6.getSerializedRefDisplayName(ctx_r6.map[key_r3]), \" \");\n  }\n}\n\nfunction ChipsComponent_ng_container_1_mat_chip_1_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"a\", 6);\n    i0.ɵɵlistener(\"click\", function ChipsComponent_ng_container_1_mat_chip_1_ng_container_2_Template_a_click_1_listener() {\n      i0.ɵɵrestoreView(_r12);\n      const key_r3 = i0.ɵɵnextContext(2).$implicit;\n      const ctx_r10 = i0.ɵɵnextContext();\n      return ctx_r10.openChipDialog(key_r3, ctx_r10.map[key_r3]);\n    });\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const key_r3 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(key_r3);\n  }\n}\n\nfunction ChipsComponent_ng_container_1_mat_chip_1_ng_container_3_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1, \":\\u00A0\");\n    i0.ɵɵelementContainerEnd();\n  }\n}\n\nfunction ChipsComponent_ng_container_1_mat_chip_1_ng_container_3_ng_container_3_ng_container_1_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const key_r3 = i0.ɵɵnextContext(5).$implicit;\n    const ctx_r18 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r18.map[key_r3]);\n  }\n}\n\nfunction ChipsComponent_ng_container_1_mat_chip_1_ng_container_3_ng_container_3_ng_container_1_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const key_r3 = i0.ɵɵnextContext(5).$implicit;\n    const ctx_r19 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r19.getTruncatedURL(ctx_r19.map[key_r3]));\n  }\n}\n\nfunction ChipsComponent_ng_container_1_mat_chip_1_ng_container_3_ng_container_3_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"a\", 7);\n    i0.ɵɵtemplate(2, ChipsComponent_ng_container_1_mat_chip_1_ng_container_3_ng_container_3_ng_container_1_span_2_Template, 2, 1, \"span\", 2);\n    i0.ɵɵtemplate(3, ChipsComponent_ng_container_1_mat_chip_1_ng_container_3_ng_container_3_ng_container_1_span_3_Template, 2, 1, \"span\", 2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const key_r3 = i0.ɵɵnextContext(4).$implicit;\n    const ctx_r16 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"href\", ctx_r16.map[key_r3], i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r16.isTooLong(ctx_r16.map[key_r3]));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r16.isTooLong(ctx_r16.map[key_r3]));\n  }\n}\n\nfunction ChipsComponent_ng_container_1_mat_chip_1_ng_container_3_ng_container_3_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const key_r3 = i0.ɵɵnextContext(4).$implicit;\n    const ctx_r17 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r17.map[key_r3]);\n  }\n}\n\nfunction ChipsComponent_ng_container_1_mat_chip_1_ng_container_3_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, ChipsComponent_ng_container_1_mat_chip_1_ng_container_3_ng_container_3_ng_container_1_Template, 4, 3, \"ng-container\", 2);\n    i0.ɵɵtemplate(2, ChipsComponent_ng_container_1_mat_chip_1_ng_container_3_ng_container_3_ng_container_2_Template, 2, 1, \"ng-container\", 2);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const key_r3 = i0.ɵɵnextContext(3).$implicit;\n    const ctx_r15 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r15.isHref(ctx_r15.map[key_r3]));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r15.isHref(ctx_r15.map[key_r3]));\n  }\n}\n\nfunction ChipsComponent_ng_container_1_mat_chip_1_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵtemplate(2, ChipsComponent_ng_container_1_mat_chip_1_ng_container_3_ng_container_2_Template, 2, 0, \"ng-container\", 2);\n    i0.ɵɵtemplate(3, ChipsComponent_ng_container_1_mat_chip_1_ng_container_3_ng_container_3_Template, 3, 2, \"ng-container\", 2);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const key_r3 = i0.ɵɵnextContext(2).$implicit;\n    const ctx_r8 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", key_r3, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r8.map[key_r3]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r8.map[key_r3]);\n  }\n}\n\nfunction ChipsComponent_ng_container_1_mat_chip_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-chip\", 4);\n    i0.ɵɵtemplate(1, ChipsComponent_ng_container_1_mat_chip_1_ng_container_1_Template, 5, 3, \"ng-container\", 2);\n    i0.ɵɵtemplate(2, ChipsComponent_ng_container_1_mat_chip_1_ng_container_2_Template, 3, 1, \"ng-container\", 2);\n    i0.ɵɵtemplate(3, ChipsComponent_ng_container_1_mat_chip_1_ng_container_3_Template, 4, 3, \"ng-container\", 2);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const key_r3 = i0.ɵɵnextContext().$implicit;\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"disableRipple\", true);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.isSerializedRef(ctx_r5.map[key_r3]));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.isTooLong(ctx_r5.map[key_r3]) && !ctx_r5.isHref(ctx_r5.map[key_r3]) && !ctx_r5.isSerializedRef(ctx_r5.map[key_r3]));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r5.isTooLong(ctx_r5.map[key_r3]) || ctx_r5.isHref(ctx_r5.map[key_r3]) && !ctx_r5.isSerializedRef(ctx_r5.map[key_r3]));\n  }\n}\n\nfunction ChipsComponent_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, ChipsComponent_ng_container_1_mat_chip_1_Template, 4, 4, \"mat-chip\", 3);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const i_r4 = ctx.index;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.isVisible(i_r4));\n  }\n}\n\nfunction ChipsComponent_div_2_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵi18n(1, 9);\n    i0.ɵɵelementContainerEnd();\n  }\n}\n\nfunction ChipsComponent_div_2_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵi18n(1, 10);\n    i0.ɵɵelementContainerEnd();\n  }\n}\n\nfunction ChipsComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r30 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵlistener(\"click\", function ChipsComponent_div_2_Template_div_click_0_listener() {\n      i0.ɵɵrestoreView(_r30);\n      const ctx_r29 = i0.ɵɵnextContext();\n      return ctx_r29.toggleView();\n    });\n    i0.ɵɵtemplate(1, ChipsComponent_div_2_ng_container_1_Template, 2, 0, \"ng-container\", 2);\n    i0.ɵɵtemplate(2, ChipsComponent_div_2_ng_container_2_Template, 2, 0, \"ng-container\", 2);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.isShowingAll);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.isShowingAll);\n  }\n}\n\nfunction ChipsComponent_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1, \"-\");\n    i0.ɵɵelementContainerEnd();\n  }\n}\n/**\n * Regular expression for URL validation created by @dperini.\n * https://gist.github.com/dperini/729294\n */\n\n\nconst URL_REGEXP = new RegExp('^(?:(?:https?|ftp)://)(?:\\\\S+(?::\\\\S*)?@)?(?:(?!(?:10|127)(?:\\\\.\\\\d{1,3}){3})(?!' + '(?:169\\\\.254|192\\\\.168)(?:\\\\.\\\\d{1,3}){2})(?!172\\\\.(?:1[6-9]|2\\\\d|3[0-1])(?:\\\\.\\\\d{1' + ',3}){2})(?:[1-9]\\\\d?|1\\\\d\\\\d|2[01]\\\\d|22[0-3])(?:\\\\.(?:1?\\\\d{1,2}|2[0-4]\\\\d|25[0-5])' + '){2}(?:\\\\.(?:[1-9]\\\\d?|1\\\\d\\\\d|2[0-4]\\\\d|25[0-4]))|(?:(?:[a-z\\\\u00a1-\\\\uffff0-9]-*)*' + '[a-z\\\\u00a1-\\\\uffff0-9]+)(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff0-9]-*)*[a-z\\\\u00a1-\\\\uffff0-9]' + '+)*(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff]{2,}))\\\\.?)(?::\\\\d{2,5})?(?:[/?#]\\\\S*)?$', 'i');\nconst MAX_CHIP_VALUE_LENGTH = 63;\nexport let ChipsComponent = /*#__PURE__*/(() => {\n  class ChipsComponent {\n    constructor(_kdStateService, _globalSettingsService, _matDialog, _changeDetectorRef) {\n      this._kdStateService = _kdStateService;\n      this._globalSettingsService = _globalSettingsService;\n      this._matDialog = _matDialog;\n      this._changeDetectorRef = _changeDetectorRef;\n      this.displayAll = false;\n      this.isShowingAll = false;\n      this._labelsLimit = 3;\n    }\n\n    ngOnInit() {\n      this._labelsLimit = this._globalSettingsService.getLabelsLimit();\n      this.processMap();\n    }\n\n    ngOnChanges(changes) {\n      if (changes.map) {\n        this.processMap();\n      }\n    }\n\n    isVisible(index) {\n      return this.isShowingAll || index < this._labelsLimit || this.displayAll;\n    }\n\n    isAnythingHidden() {\n      return this.keys.length > this._labelsLimit && !this.displayAll;\n    }\n\n    toggleView() {\n      this.isShowingAll = !this.isShowingAll;\n    }\n\n    isTooLong(value) {\n      return value !== undefined && value.length > MAX_CHIP_VALUE_LENGTH;\n    }\n\n    getTruncatedURL(url) {\n      return truncateUrl(url, MAX_CHIP_VALUE_LENGTH);\n    }\n\n    isHref(value) {\n      return URL_REGEXP.test(value.trim());\n    }\n\n    isSerializedRef(value) {\n      try {\n        const obj = JSON.parse(value);\n        return obj && obj.kind === 'SerializedReference';\n      } catch (e) {\n        return false;\n      }\n    }\n\n    getSerializedHref(value) {\n      const ref = JSON.parse(value);\n\n      if (!ref.reference || !ref.reference.kind || !ref.reference.name || !ref.reference.namespace) {\n        return '';\n      }\n\n      return this._kdStateService.href(ref.reference.kind.toLowerCase(), ref.reference.name, ref.reference.namespace);\n    }\n\n    getSerializedRefDisplayName(value) {\n      const ref = JSON.parse(value);\n\n      if (!ref.reference || !ref.reference.kind || !ref.reference.name || !ref.reference.namespace) {\n        return 'Invalid reference';\n      }\n\n      return `${ref.reference.kind.replace(/([A-Z])/g, ' $1')} ${ref.reference.namespace}/${ref.reference.name}`;\n    }\n\n    openChipDialog(key, value) {\n      const dialogConfig = {\n        width: '630px',\n        data: {\n          key,\n          value\n        }\n      };\n\n      this._matDialog.open(ChipDialog, dialogConfig);\n    }\n\n    processMap() {\n      if (!this.map) {\n        this.map = [];\n      }\n\n      if (Array.isArray(this.map)) {\n        this.keys = this.map;\n      } else {\n        this.keys = Object.keys(this.map);\n      }\n\n      this._changeDetectorRef.markForCheck();\n    }\n\n  }\n\n  ChipsComponent.ɵfac = function ChipsComponent_Factory(t) {\n    return new (t || ChipsComponent)(i0.ɵɵdirectiveInject(i1.KdStateService), i0.ɵɵdirectiveInject(i2.GlobalSettingsService), i0.ɵɵdirectiveInject(i3.MatDialog), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n  };\n\n  ChipsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ChipsComponent,\n    selectors: [[\"kd-chips\"]],\n    inputs: {\n      map: \"map\",\n      displayAll: \"displayAll\"\n    },\n    features: [i0.ɵɵNgOnChangesFeature],\n    decls: 4,\n    vars: 3,\n    consts: function () {\n      let i18n_0;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        const MSG_EXTERNAL_3517550046701184661$$SRC_APP_FRONTEND_COMMON_COMPONENTS_CHIPS_COMPONENT_TS___1 = goog.getMsg(\"Show less\");\n        i18n_0 = MSG_EXTERNAL_3517550046701184661$$SRC_APP_FRONTEND_COMMON_COMPONENTS_CHIPS_COMPONENT_TS___1;\n      } else {\n        i18n_0 = $localize`Show less`;\n      }\n\n      let i18n_2;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        const MSG_EXTERNAL_2946624699882754313$$SRC_APP_FRONTEND_COMMON_COMPONENTS_CHIPS_COMPONENT_TS___3 = goog.getMsg(\"Show all\");\n        i18n_2 = MSG_EXTERNAL_2946624699882754313$$SRC_APP_FRONTEND_COMMON_COMPONENTS_CHIPS_COMPONENT_TS___3;\n      } else {\n        i18n_2 = $localize`Show all`;\n      }\n\n      return [[4, \"ngFor\", \"ngForOf\"], [\"class\", \"kd-chips-show-button\", 3, \"click\", 4, \"ngIf\"], [4, \"ngIf\"], [3, \"disableRipple\", 4, \"ngIf\"], [3, \"disableRipple\"], [\"queryParamsHandling\", \"preserve\", 1, \"kd-clickable\", 3, \"routerLink\"], [1, \"kd-clickable\", 3, \"click\"], [\"target\", \"_blank\", 3, \"href\"], [1, \"kd-chips-show-button\", 3, \"click\"], i18n_0, i18n_2];\n    },\n    template: function ChipsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-chip-list\");\n        i0.ɵɵtemplate(1, ChipsComponent_ng_container_1_Template, 2, 1, \"ng-container\", 0);\n        i0.ɵɵtemplate(2, ChipsComponent_div_2_Template, 3, 2, \"div\", 1);\n        i0.ɵɵtemplate(3, ChipsComponent_ng_container_3_Template, 2, 0, \"ng-container\", 2);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.keys);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isAnythingHidden());\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.keys.length === 0);\n      }\n    },\n    directives: [i4.MatChipList, i5.NgForOf, i5.NgIf, i4.MatChip, i6.RouterLinkWithHref],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return ChipsComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}