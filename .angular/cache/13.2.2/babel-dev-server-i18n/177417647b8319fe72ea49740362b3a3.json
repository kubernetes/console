{"ast":null,"code":"import { ChangeDetectorRef } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { map } from 'rxjs/operators';\nimport { ResourceListBase } from '../../../resources/list';\nimport { NotificationsService } from '../../../services/global/notifications';\nimport { EndpointManager, Resource } from '../../../services/resource/endpoint';\nimport { NamespacedResourceService } from '../../../services/resource/resource';\nimport { MenuComponent } from '../../list/column/menu/component';\nimport { ListGroupIdentifier, ListIdentifier } from '../groupids';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../services/resource/resource\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../../../services/global/notifications\";\nimport * as i4 from \"../../card/component\";\nimport * as i5 from \"@angular/flex-layout/flex\";\nimport * as i6 from \"../../list/filter/component\";\nimport * as i7 from \"../../list/spinner/component\";\nimport * as i8 from \"@angular/material/table\";\nimport * as i9 from \"@angular/material/sort\";\nimport * as i10 from \"@angular/material/icon\";\nimport * as i11 from \"@angular/common\";\nimport * as i12 from \"@angular/flex-layout/extended\";\nimport * as i13 from \"../../date/component\";\nimport * as i14 from \"../../list/column/component\";\nimport * as i15 from \"@angular/material/paginator\";\nimport * as i16 from \"../../list/zerostate/component\";\n\nfunction IngressRouteListComponent_mat_header_cell_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-header-cell\");\n  }\n}\n\nfunction IngressRouteListComponent_mat_cell_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-cell\");\n    i0.ɵɵelementStart(1, \"mat-icon\", 17);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const object_r17 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", object_r17.iconClass);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", object_r17.iconName, \" \");\n  }\n}\n\nfunction IngressRouteListComponent_mat_header_cell_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-header-cell\");\n    i0.ɵɵtext(1, \"Nom\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction IngressRouteListComponent_mat_cell_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-cell\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const object_r18 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", object_r18.objectMeta.name, \" \");\n  }\n}\n\nfunction IngressRouteListComponent_mat_header_cell_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-header-cell\");\n    i0.ɵɵtext(1, \"Host\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction IngressRouteListComponent_mat_cell_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-cell\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementStart(2, \"a\", 18);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const object_r19 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", object_r19.spec.splitUrl[0], \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"href\", object_r19.spec.splitUrl[3], i0.ɵɵsanitizeUrl);\n    i0.ɵɵpropertyInterpolate(\"title\", object_r19.spec.splitUrl[1]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(object_r19.spec.splitUrl[1]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", object_r19.spec.splitUrl[2], \" \");\n  }\n}\n\nfunction IngressRouteListComponent_mat_header_cell_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-header-cell\");\n    i0.ɵɵtext(1, \"Service\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction IngressRouteListComponent_mat_cell_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-cell\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const object_r20 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(object_r20.spec.routes[0].services[0].name);\n  }\n}\n\nfunction IngressRouteListComponent_mat_header_cell_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-header-cell\");\n    i0.ɵɵtext(1, \"Port\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction IngressRouteListComponent_mat_cell_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-cell\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const object_r21 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(object_r21.spec.routes[0].services[0].port);\n  }\n}\n\nfunction IngressRouteListComponent_mat_header_cell_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-header-cell\");\n    i0.ɵɵtext(1, \"Entrypoint\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction IngressRouteListComponent_mat_cell_29_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-cell\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const object_r22 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(object_r22.spec.entryPoints[0]);\n  }\n}\n\nfunction IngressRouteListComponent_mat_header_cell_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-header-cell\");\n    i0.ɵɵi18n(1, 19);\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction IngressRouteListComponent_mat_cell_32_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-cell\");\n    i0.ɵɵelement(1, \"kd-date\", 20);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const object_r23 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"date\", object_r23.objectMeta.creationTimestamp);\n  }\n}\n\nfunction IngressRouteListComponent_ng_container_33_mat_header_cell_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-header-cell\");\n  }\n}\n\nfunction IngressRouteListComponent_ng_container_33_mat_cell_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-cell\");\n    i0.ɵɵelement(1, \"kd-dynamic-cell\", 21);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const object_r27 = ctx.$implicit;\n    const col_r24 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"component\", col_r24.component)(\"resource\", object_r27);\n  }\n}\n\nfunction IngressRouteListComponent_ng_container_33_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0, 12);\n    i0.ɵɵtemplate(1, IngressRouteListComponent_ng_container_33_mat_header_cell_1_Template, 1, 0, \"mat-header-cell\", 10);\n    i0.ɵɵtemplate(2, IngressRouteListComponent_ng_container_33_mat_cell_2_Template, 2, 2, \"mat-cell\", 11);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const col_r24 = ctx.$implicit;\n    i0.ɵɵproperty(\"matColumnDef\", col_r24.name);\n  }\n}\n\nfunction IngressRouteListComponent_mat_header_row_34_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-header-row\");\n  }\n}\n\nfunction IngressRouteListComponent_mat_row_35_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-row\");\n  }\n}\n\nexport let IngressRouteListComponent = /*#__PURE__*/(() => {\n  class IngressRouteListComponent extends ResourceListBase {\n    constructor(crdObject_, activatedRoute_, notifications, cdr) {\n      super(activatedRoute_.params.pipe(map(params => `customresourcedefinition/${params.crdName}`)), notifications, cdr);\n      this.crdObject_ = crdObject_;\n      this.activatedRoute_ = activatedRoute_;\n      this.hcpurl = 'http://eahcp.org/index.php/about_eahcp/covered_species';\n      this.errorSpec = {\n        entryPoints: ['Erreur de format'],\n        routes: [{\n          match: 'Erreur de format',\n          services: [{\n            name: 'Erreur de format',\n            port: 0\n          }]\n        }]\n      };\n      this.id = ListIdentifier.crdObject;\n      this.groupId = ListGroupIdentifier.none;\n      const url = activatedRoute_.snapshot['_routerState']['url'];\n      this.objectType = url.split(';')[0].split('/')[1];\n\n      switch (this.objectType) {\n        case 'ingressroutes':\n          this.objectName = 'IngressRoutes';\n          break;\n\n        case 'ingressroutetcps':\n          this.objectName = 'IngressRouteTCPs';\n          break;\n\n        default:\n          this.objectName = this.objectType;\n      }\n\n      this.endpoint = EndpointManager.resource(Resource.crd, true).traefik(this.objectType); // Register action columns.\n\n      this.registerActionColumn('menu', MenuComponent);\n    }\n\n    getResourceObservable(params) {\n      return this.crdObject_.get(this.endpoint, undefined, undefined, params);\n    }\n\n    linkModelFunc(url) {\n      window.open(url);\n    }\n\n    map(crdObjectList) {\n      if (crdObjectList.items) {\n        this.totalItems = crdObjectList.items.length;\n        crdObjectList.items.forEach(item => {\n          let splittedMatch = ['', '', '', ''];\n\n          if (!item.spec.routes || !item.spec.routes[0] || !item.spec.routes[0].match || !item.spec.routes[0].services || !item.spec.routes[0].services[0] || !item.spec.routes[0].services[0].name || !item.spec.routes[0].services[0].port) {\n            item['iconName'] = 'error';\n            item['iconClass'] = {\n              'kd-success': false\n            };\n            item.spec = this.errorSpec;\n            splittedMatch[0] = item.spec.routes[0].match;\n          } else {\n            item['iconName'] = 'check_circle';\n            item['iconClass'] = {\n              'kd-success': true\n            };\n            splittedMatch = this.splitHostUrl(item.spec.routes[0].match);\n          }\n\n          item.spec['splitUrl'] = splittedMatch;\n        });\n        return crdObjectList.items;\n      } else {\n        return null;\n      }\n    }\n\n    splitHostUrl(fullUrl) {\n      let cut;\n      let guimet;\n\n      if (fullUrl.split('\\'').length > fullUrl.split('\\`').length) {\n        cut = fullUrl.split('\\'');\n        guimet = '\\'';\n      } else {\n        cut = fullUrl.split('\\`');\n        guimet = '\\`';\n      }\n\n      if (cut.length === 3) {\n        return [cut[0] + guimet, cut[1], guimet + cut[2], 'https://' + cut[1]];\n      } else if (cut.length === 5) {\n        return [cut[0] + guimet, cut[1], guimet + cut[2] + guimet + cut[3] + guimet + cut[4], 'https://' + cut[1] + cut[3]];\n      } else {\n        return [fullUrl, '', '', ''];\n      }\n    }\n\n    getDisplayColumns() {\n      return ['statusicon', 'title', 'host', 'service', 'port', 'entrypoint', 'created'];\n    }\n\n  }\n\n  IngressRouteListComponent.ɵfac = function IngressRouteListComponent_Factory(t) {\n    return new (t || IngressRouteListComponent)(i0.ɵɵdirectiveInject(i1.NamespacedResourceService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.NotificationsService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n  };\n\n  IngressRouteListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: IngressRouteListComponent,\n    selectors: [[\"kd-ingressroute-list\"]],\n    inputs: {\n      endpoint: \"endpoint\"\n    },\n    features: [i0.ɵɵInheritDefinitionFeature],\n    decls: 39,\n    vars: 20,\n    consts: function () {\n      let i18n_0;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        const MSG_EXTERNAL_6494596911805287915$$SRC_APP_FRONTEND_COMMON_COMPONENTS_RESOURCELIST_INGRESSROUTES_COMPONENT_TS_1 = goog.getMsg(\"Items:\\u00A0\");\n        i18n_0 = MSG_EXTERNAL_6494596911805287915$$SRC_APP_FRONTEND_COMMON_COMPONENTS_RESOURCELIST_INGRESSROUTES_COMPONENT_TS_1;\n      } else {\n        i18n_0 = $localize`Items: `;\n      }\n\n      let i18n_2;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        const MSG_EXTERNAL_4207916966377787111$$SRC_APP_FRONTEND_COMMON_COMPONENTS_RESOURCELIST_INGRESSROUTES_COMPONENT_TS__3 = goog.getMsg(\"Created\");\n        i18n_2 = MSG_EXTERNAL_4207916966377787111$$SRC_APP_FRONTEND_COMMON_COMPONENTS_RESOURCELIST_INGRESSROUTES_COMPONENT_TS__3;\n      } else {\n        i18n_2 = $localize`Created`;\n      }\n\n      return [[\"role\", \"table\", 3, \"hidden\"], [\"title\", \"\", \"fxLayout\", \"row\"], [\"description\", \"\"], [1, \"kd-muted-light\"], i18n_0, [\"actions\", \"\"], [\"content\", \"\", 3, \"hidden\"], [\"kdLoadingSpinner\", \"\", 3, \"isLoading\"], [\"matSort\", \"\", \"matSortActive\", \"age\", \"matSortDisableClear\", \"\", \"matSortDirection\", \"asc\", 3, \"dataSource\"], [\"matColumnDef\", \"statusicon\"], [4, \"matHeaderCellDef\"], [4, \"matCellDef\"], [3, \"matColumnDef\"], [3, \"matColumnDef\", 4, \"ngFor\", \"ngForOf\"], [4, \"matHeaderRowDef\"], [4, \"matRowDef\", \"matRowDefColumns\"], [3, \"length\", \"pageSize\", \"hidePageSize\", \"showFirstLastButtons\"], [3, \"ngClass\"], [\"target\", \"_blank\", \"ng-click\", \"linkModelFunc(object.spec.splitUrl[1])\", 1, \"navLinkHcp\", 3, \"href\", \"title\"], i18n_2, [\"relative\", \"\", 3, \"date\"], [3, \"component\", \"resource\"]];\n    },\n    template: function IngressRouteListComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"kd-card\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵtext(2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 2);\n        i0.ɵɵelementStart(4, \"span\", 3);\n        i0.ɵɵi18n(5, 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"div\", 5);\n        i0.ɵɵelement(8, \"kd-card-list-filter\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"div\", 6);\n        i0.ɵɵelement(10, \"div\", 7);\n        i0.ɵɵelementStart(11, \"mat-table\", 8);\n        i0.ɵɵelementContainerStart(12, 9);\n        i0.ɵɵtemplate(13, IngressRouteListComponent_mat_header_cell_13_Template, 1, 0, \"mat-header-cell\", 10);\n        i0.ɵɵtemplate(14, IngressRouteListComponent_mat_cell_14_Template, 3, 2, \"mat-cell\", 11);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementContainerStart(15, 12);\n        i0.ɵɵtemplate(16, IngressRouteListComponent_mat_header_cell_16_Template, 2, 0, \"mat-header-cell\", 10);\n        i0.ɵɵtemplate(17, IngressRouteListComponent_mat_cell_17_Template, 2, 1, \"mat-cell\", 11);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementContainerStart(18, 12);\n        i0.ɵɵtemplate(19, IngressRouteListComponent_mat_header_cell_19_Template, 2, 0, \"mat-header-cell\", 10);\n        i0.ɵɵtemplate(20, IngressRouteListComponent_mat_cell_20_Template, 5, 5, \"mat-cell\", 11);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementContainerStart(21, 12);\n        i0.ɵɵtemplate(22, IngressRouteListComponent_mat_header_cell_22_Template, 2, 0, \"mat-header-cell\", 10);\n        i0.ɵɵtemplate(23, IngressRouteListComponent_mat_cell_23_Template, 2, 1, \"mat-cell\", 11);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementContainerStart(24, 12);\n        i0.ɵɵtemplate(25, IngressRouteListComponent_mat_header_cell_25_Template, 2, 0, \"mat-header-cell\", 10);\n        i0.ɵɵtemplate(26, IngressRouteListComponent_mat_cell_26_Template, 2, 1, \"mat-cell\", 11);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementContainerStart(27, 12);\n        i0.ɵɵtemplate(28, IngressRouteListComponent_mat_header_cell_28_Template, 2, 0, \"mat-header-cell\", 10);\n        i0.ɵɵtemplate(29, IngressRouteListComponent_mat_cell_29_Template, 2, 1, \"mat-cell\", 11);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementContainerStart(30, 12);\n        i0.ɵɵtemplate(31, IngressRouteListComponent_mat_header_cell_31_Template, 2, 0, \"mat-header-cell\", 10);\n        i0.ɵɵtemplate(32, IngressRouteListComponent_mat_cell_32_Template, 2, 1, \"mat-cell\", 11);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵtemplate(33, IngressRouteListComponent_ng_container_33_Template, 3, 1, \"ng-container\", 13);\n        i0.ɵɵtemplate(34, IngressRouteListComponent_mat_header_row_34_Template, 1, 0, \"mat-header-row\", 14);\n        i0.ɵɵtemplate(35, IngressRouteListComponent_mat_row_35_Template, 1, 0, \"mat-row\", 15);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(36, \"mat-paginator\", 16);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(37, \"div\", 6);\n        i0.ɵɵelement(38, \"kd-list-zero-state\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"hidden\", ctx.isHidden());\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.objectName);\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate(ctx.totalItems);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"hidden\", ctx.showZeroState());\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"isLoading\", ctx.isLoading);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"dataSource\", ctx.getData());\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"matColumnDef\", ctx.getColumns()[1]);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"matColumnDef\", ctx.getColumns()[2]);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"matColumnDef\", ctx.getColumns()[3]);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"matColumnDef\", ctx.getColumns()[4]);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"matColumnDef\", ctx.getColumns()[5]);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"matColumnDef\", ctx.getColumns()[6]);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.getActionColumns());\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"matHeaderRowDef\", ctx.getColumns());\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"matRowDefColumns\", ctx.getColumns());\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"length\", ctx.totalItems)(\"pageSize\", ctx.itemsPerPage)(\"hidePageSize\", true)(\"showFirstLastButtons\", true);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"hidden\", !ctx.showZeroState());\n      }\n    },\n    directives: [i4.CardComponent, i5.DefaultLayoutDirective, i6.CardListFilterComponent, i7.LoadingSpinner, i8.MatTable, i9.MatSort, i8.MatColumnDef, i8.MatHeaderCellDef, i8.MatHeaderCell, i8.MatCellDef, i8.MatCell, i10.MatIcon, i11.NgClass, i12.DefaultClassDirective, i13.DateComponent, i11.NgForOf, i14.ColumnComponent, i8.MatHeaderRowDef, i8.MatHeaderRow, i8.MatRowDef, i8.MatRow, i15.MatPaginator, i16.ListZeroStateComponent],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return IngressRouteListComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}